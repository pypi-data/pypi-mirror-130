# =============================================================================
# global pipeline config
#
config _pipeline:_edge
  :capacity                                    40

config global
   # output metadata information
   :version_identifier                       VIAME-JoBBS-Models-v2021.02.23
   :eo_polar_bear_model_identifier           eo_pb_yolo_tiny_3l.cfg@$ENV{PIPE_ARG_DET_THRESH_PB}

# =============================================================================
process optical_input
  :: video_input
  :video_filename                              $ENV{PIPE_ARG_OPTICAL_INPUT}
  :no_path_in_name                             false
  :frame_time                                  0
  :exit_on_invalid                             true
  :video_reader:type                           image_list
  :video_reader:image_list:image_reader:type   ocv

# =============================================================================
process optical_detector1
  :: image_object_detector
  :detector:type                               darknet

  :frame_downsample                            2
  :frame_offset                                0

  block detector:darknet
    # Network config, weights, and names
    relativepath net_config  =                 ../models/eo_pb_yolo_tiny_3l.cfg
    relativepath weight_file =                 ../models/eo_pb_yolo_tiny_3l.weights
    relativepath class_names =                 ../models/eo_pb_yolo_tiny_3l.names

    # Detector parameters
    :thresh                                    $ENV{PIPE_ARG_DET_THRESH_PB}
    :hier_thresh                               0.001
    :gpu_index                                 0

    # Image scaling parameters
    :resize_option                             chip
    :scale                                     1.0
    :chip_step                                 316
    :chip_edge_filter                          0

  endblock

process optical_detector2
  :: image_object_detector
  :detector:type                               darknet

  :frame_downsample                            2
  :frame_offset                                1

  block detector:darknet
    # Network config, weights, and names
    relativepath net_config  =                 ../models/eo_pb_yolo_tiny_3l.cfg
    relativepath weight_file =                 ../models/eo_pb_yolo_tiny_3l.weights
    relativepath class_names =                 ../models/eo_pb_yolo_tiny_3l.names

    # Detector parameters
    :thresh                                    $ENV{PIPE_ARG_DET_THRESH_PB}
    :hier_thresh                               0.001
    :gpu_index                                 0

    # Image scaling parameters
    :resize_option                             chip
    :scale                                     1.0
    :chip_step                                 316
    :chip_edge_filter                          0

  endblock

connect from optical_input.image
        to   optical_detector1.image

connect from optical_input.image
        to   optical_detector2.image

# =============================================================================
process optical_detector2_nms
  :: refine_detections
  :refiner:type                                nms

  block refiner:nms
    :max_overlap                               0.80
    :nms_scale_factor                          1.0
    :output_scale_factor                       1.0
  endblock

process optical_detector1_nms
  :: refine_detections
  :refiner:type                                nms

  block refiner:nms
    :max_overlap                               0.80
    :nms_scale_factor                          1.0
    :output_scale_factor                       1.0
  endblock

connect from optical_detector1.detected_object_set
        to   optical_detector1_nms.detected_object_set

connect from optical_detector2.detected_object_set
        to   optical_detector2_nms.detected_object_set

# =============================================================================
process optical_detector_output
  :: merge_detection_sets

connect from optical_detector1_nms.detected_object_set
        to   optical_detector_output.detected_object_set1
connect from optical_detector2_nms.detected_object_set
        to   optical_detector_output.detected_object_set2


# =============================================================================
process optical_writer_csv
  :: detected_object_output

  # Type of file to output
  :file_name                                   $ENV{PIPE_ARG_OPTICAL_OUTPUT_DETS}
  :frame_list_output                           $ENV{PIPE_ARG_OPTICAL_OUTPUT_IMAGE_LIST}
  :writer:type                                 viame_csv

  :writer:viame_csv:model_identifier           $CONFIG{global:eo_polar_bear_model_identifier}
  :writer:viame_csv:version_identifier         $CONFIG{global:version_identifier}

connect from optical_detector_output.detected_object_set
        to   optical_writer_csv.detected_object_set
connect from optical_input.file_name
        to   optical_writer_csv.image_file_name