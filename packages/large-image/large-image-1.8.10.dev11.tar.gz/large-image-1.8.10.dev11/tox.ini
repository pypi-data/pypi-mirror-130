[tox]
envlist =
  test-py{36,37,38,39,310}
  docs
  flake8
  lintclient
  lintannotationclient
skip_missing_interpreters = true
toxworkdir = {toxinidir}/build/tox

[testenv]
passenv = PYTEST_*
extras =
  memcached
setenv =
  GDAL_PAM_ENABLED=no
  PIP_FIND_LINKS=https://girder.github.io/large_image_wheels

[testenv:test]
description = Run all tests, including Girder
deps =
  -rrequirements-dev.txt
  coverage
  mock
  pooch
  pytest>=3.6
  pytest-cov>=2.6
  pytest-custom-exit-code
  pytest-girder>=3.0.4
  pytest-xdist
whitelist_externals =
  rm
  npx
# Run most tests in parallel and conflicting tests sequentially
commands =
  rm -rf build/test/coverage/web_temp
  girder build --dev
  pytest -m 'singular' --cov-config tox.ini --suppress-no-test-exit-code {posargs}
  pytest --numprocesses logical -m 'not singular' --cov-config tox.ini --cov-append --suppress-no-test-exit-code {posargs}
  - npx nyc report --temp-dir build/test/coverage/web_temp --report-dir build/test/coverage --reporter cobertura --reporter text-summary
# Reduce npm chatter
setenv =
  NPM_CONFIG_FUND=false
  NPM_CONFIG_AUDIT=false
  NPM_CONFIG_AUDIT_LEVEL=high
  NPM_CONFIG_LOGLEVEL=warn
  NPM_CONFIG_PROGRESS=false
  NPM_CONFIG_PREFER_OFFLINE=true
  GDAL_PAM_ENABLED=no
  PIP_FIND_LINKS=https://girder.github.io/large_image_wheels

[testenv:test-py{36,37,38,39,310}]
deps = {[testenv:test]deps}
whitelist_externals = {[testenv:test]whitelist_externals}
commands = {[testenv:test]commands}
setenv = {[testenv:test]setenv}

[testenv:server]
description = Run all tests except Girder client
deps = {[testenv:test]deps}
commands =
  pytest -m 'singular and not girder_client' --cov-config tox.ini --suppress-no-test-exit-code {posargs}
  pytest --numprocesses logical -m 'not singular and not girder_client' --cov-config tox.ini --cov-append --suppress-no-test-exit-code {posargs}

[testenv:server-py{36,37,38,39,310}]
deps = {[testenv:server]deps}
commands = {[testenv:server]commands}

[testenv:core]
description = Run core tests.  This is all but Girder
deps =
  -rrequirements-dev-core.txt
  coverage
  mock
  pooch
  pytest>=3.6
  pytest-cov>=2.6
  pytest-custom-exit-code
  pytest-xdist
commands =
  pytest -m 'singular and not girder' --cov-config tox.ini --suppress-no-test-exit-code {posargs}
  pytest --numprocesses logical -m 'not singular and not girder' --cov-config tox.ini --cov-append --suppress-no-test-exit-code {posargs}

[testenv:core-py{36,37,38,39,310}]
deps = {[testenv:core]deps}
commands = {[testenv:core]commands}

[testenv:flake8]
description = Lint python code
skipsdist = true
skip_install = true
deps =
  flake8
  flake8-bugbear
  flake8-docstrings
  flake8-isort
  flake8-quotes
commands = flake8 {posargs}

[testenv:format]
description = Autoformat import order
skipsdist = true
skip_install = true
deps =
  isort
commands =
  isort {posargs:.}

[testenv:lintclient]
description = Lint the girder large_image plugin client
skip_install = true
usedevelop = false
deps =
changedir = {toxinidir}/girder/girder_large_image/web_client
whitelist_externals =
  npm
commands =
  npm install --no-package-lock
  npm run lint

[testenv:lintannotationclient]
description = Lint the girder large_image_annotation plugin client
skip_install = true
usedevelop = false
deps =
changedir = {toxinidir}/girder_annotation/girder_large_image_annotation/web_client
whitelist_externals =
  npm
commands =
  npm install --no-package-lock
  npm run lint

[testenv:docs]
description = Build documentation
deps =
  -rrequirements-dev.txt
  sphinx
  sphinx-rtd-theme
changedir = {toxinidir}/docs
whitelist_externals =
  make_docs.sh
commands =
  ./make_docs.sh

[isort]
line_length = 100
wrap_length = 79

[flake8]
max-line-length = 100
show-source = True
format = pylint
max-complexity = 14
exclude =
    build
    docs
    */web_client/*
    */*egg*/*
# Ignore missing docstring errors.
ignore = D100,D101,D102,D103,D104,D105,D106,D107,D200,D205,D400,D401,E741,W504

[pytest]
addopts = --verbose --strict-markers --showlocals --cov-report="term" --cov-report="xml" --cov --ignore test/utils
cache_dir = build/pytest_cache
testpaths =
  test
  girder/test_girder
  girder_annotation/test_annotation
markers =
  singular: mark a test to run in a non-parallel environment.
  girder: mark a test as requiring girder
  girder_client: mark a test as requiring girder client
  plugin: use by girder to load plugins

[coverage:paths]
# As of pytest-cov 2.6, all but the first source line is relative to the first
# source line.  The first line is relative to the local path.  Prior to 2.6,
# all lines were relative to the local path.
source =
    large_image/
    ../sources/
    ../utilities/converter/
    ../examples/
    ../girder/girder_large_image
    ../girder_annotation/girder_large_image_annotation
    ../utilities/converter/tasks/
    ../build/tox/*/lib/*/site-packages/large_image/

[coverage:run]
data_file = build/coverage/.coverage
branch = True
omit = test/*
include =
    large_image/*
    sources/*
    utilities/converter/*
    examples/*
    girder/girder_large_image/*
    girder_annotation/girder_large_image_annotation/*
    utilities/tasks*
    build/tox/*/lib/*/site-packages/*large_image*/*
parallel = True

[coverage:html]
directory = build/artifacts/python_coverage
title = Large image Coverage Report

[coverage:xml]
output = build/test/coverage/py_coverage.xml
