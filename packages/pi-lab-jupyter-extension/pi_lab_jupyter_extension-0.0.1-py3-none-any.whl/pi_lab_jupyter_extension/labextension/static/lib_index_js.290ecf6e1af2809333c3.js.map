{"version":3,"file":"lib_index_js.290ecf6e1af2809333c3.js","mappings":";;;;;;;;;;;;;;;;AAA2D;AACT;AACM;AACxD;AACA,IAAI,oEAAiB;AACrB,IAAI,2DAAa;AACjB,IAAI,iEAAgB;AACpB;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRvB,cAAc,SAAI,IAAI,SAAI;AAC1B;AACA;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA;AACA;AAC0B;AACgG;AACQ;AACnF;AACO;AACA;AACI;AACA;AACQ;AACI;AACtE;AACA;AACA,qBAAqB,8DAAO;AAC5B,aAAa,aAAa;AAC1B,YAAY,qEAAO;AACnB,CAAC;AACD,uBAAuB,8DAAO;AAC9B,aAAa,aAAa;AAC1B,YAAY,uEAAS;AACrB,CAAC;AACD,uBAAuB,8DAAO;AAC9B,aAAa,aAAa;AAC1B,YAAY,uEAAS;AACrB,CAAC;AACD,2BAA2B,8DAAO;AAClC,aAAa,aAAa;AAC1B,YAAY,oKAAa;AACzB,CAAC;AACD,6BAA6B,8DAAO;AACpC,aAAa,aAAa;AAC1B,YAAY,sKAAe;AAC3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc,mEAAY;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAO;AACrB,KAAK;AACL;AACA;AACA,cAAc,2EAAoB;AAClC,KAAK;AACL;AACA;AACA,cAAc,6EAAsB;AACpC,KAAK;AACL;AACA;AACA,cAAc,8DAAO;AACrB;AACA;AACA,2BAA2B,6DAAW;AACtC,0BAA0B;AAC1B;AACA;AACA;AACA,QAAQ,2EAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAmB,CAAC,wEAAsB,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAM;AACrC;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAM;AAC7B;AACA;AACA;AACA,0BAA0B,wDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAI;AACZ;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC,+DAAa;AAClD,0BAA0B,sEAAe,GAAG,kBAAkB;AAC9D,8CAA8C,6DAA6D;AAC3G;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA,0BAA0B,wDAAW;AACrC;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe;AACtD,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA,oDAAoD,UAAU,OAAO,wCAAwC,IAAI,qCAAqC,IAAI,gCAAgC;AAC1L,kCAAkC,0EAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,4RAA4R;AAC7U;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,uDAAI;AACZ,oCAAoC;AACpC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA,sFAAsF,aAAa;AACnG;AACA,yBAAyB,yCAAyC,UAAU,4DAA4D;AACxI;AACA,mDAAmD,kBAAkB;AACrE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sEAAe,GAAG,iBAAiB;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC,0BAA0B;;;;;;;;;;;;;;;ACvZ3B;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmD;AACK;AACU;AACd;AACX;AACM;AACS;AACJ;AACI;AACxD,qBAAqB,sDAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+CAAQ;AAClD;AACA;AACA,IAAI,gDAAS;AACb,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAmB,UAAU,SAAS,yEAAyE;AAC3H,QAAQ,0DAAmB,UAAU,4BAA4B,+BAA+B;AAChG,YAAY,0DAAmB,aAAa;AAC5C;AACA,+GAA+G;AAC/G,QAAQ,0DAAmB,UAAU,KAAK,mEAAO;AACjD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,2BAA2B,6DAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+EAA6B;AACtD,oBAAoB,8DAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,iBAAiB,0DAA0D;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAO;AAChC;AACA,oBAAoB,oEAAU;AAC9B,SAAS;AACT;AACA;AACA,YAAY,0DAAa;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAAa;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,kEAAkB;AACrC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1IA,iEAAe,qBAAuB,yEAAyE;;;;;;;;;;;;;;ACA/G,iEAAe,8SAA8S;;;;;;;;;;;;;;ACA7T,iEAAe,+RAA+R;;;;;;;;;;;;;;ACA9S,iEAAe,uLAAuL,mCAAmC,0BAA0B,0fAA0f;;;;;;;;;;;;;;ACA7vB,iEAAe,6hCAA6hC","sources":["webpack://pi_lab_jupyter_extension/./lib/index.js","webpack://pi_lab_jupyter_extension/./lib/plugin_cell_tool_bar.js","webpack://pi_lab_jupyter_extension/./lib/plugin_pi_notebook.js","webpack://pi_lab_jupyter_extension/./lib/plugin_ppt_view.js","webpack://pi_lab_jupyter_extension/./style/ppt_view/loading.gif","webpack://pi_lab_jupyter_extension/./style/cell_tool_bar/code.svg","webpack://pi_lab_jupyter_extension/./style/cell_tool_bar/delete.svg","webpack://pi_lab_jupyter_extension/./style/cell_tool_bar/format.svg","webpack://pi_lab_jupyter_extension/./style/ppt_view/ppt-view.svg"],"sourcesContent":["import { cellToolBarPlugin } from './plugin_cell_tool_bar';\nimport { pptViewPlugin } from './plugin_ppt_view';\nimport { piNotebookPlugin } from './plugin_pi_notebook';\nconst plugins = [\n    cellToolBarPlugin,\n    pptViewPlugin,\n    piNotebookPlugin,\n];\nexport default plugins;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { addToolbarButtonClass, ReactWidget, ToolbarButtonComponent, Toolbar, ToolbarButton } from '@jupyterlab/apputils';\nimport { addIcon, caretDownEmptyThinIcon, caretUpEmptyThinIcon, LabIcon, markdownIcon, runIcon } from '@jupyterlab/ui-components';\nimport { each, find } from '@lumino/algorithm';\nimport { PanelLayout, Widget } from '@lumino/widgets';\nimport codeSvg from '../style/cell_tool_bar/code.svg';\nimport deleteSvg from '../style/cell_tool_bar/delete.svg';\nimport formatSvg from '../style/cell_tool_bar/format.svg';\nimport lockedTagsSvg from '../style/cell_tool_bar/lockedtags.svg';\nimport unlockedTagsSvg from '../style/cell_tool_bar/unlockedtags.svg';\nconst EXTENSION_ID = 'pi_lab_jupyter_extension:cell_tool_bar_plugin';\nconst CELL_BAR_CLASS = 'jp-enh-cell-bar';\nconst codeIcon = new LabIcon({\n    name: `${EXTENSION_ID}:code`,\n    svgstr: codeSvg\n});\nconst deleteIcon = new LabIcon({\n    name: `${EXTENSION_ID}:delete`,\n    svgstr: deleteSvg\n});\nconst formatIcon = new LabIcon({\n    name: `${EXTENSION_ID}:format`,\n    svgstr: formatSvg\n});\nconst lockedTagsIcon = new LabIcon({\n    name: `${EXTENSION_ID}:lockedtags`,\n    svgstr: lockedTagsSvg\n});\nconst unlockedTagsIcon = new LabIcon({\n    name: `${EXTENSION_ID}:unlockedtags`,\n    svgstr: unlockedTagsSvg\n});\nfunction getCSSVar(name) {\n    return getComputedStyle(document.documentElement)\n        .getPropertyValue(name)\n        .trim();\n}\nconst DEFAULT_LEFT_MENU = [\n    // Originate from @jupyterlab/notebook-extension\n    {\n        cellType: 'markdown',\n        command: 'notebook:change-cell-to-code',\n        icon: codeIcon\n    },\n    {\n        cellType: 'code',\n        command: 'notebook:change-cell-to-markdown',\n        icon: markdownIcon\n    },\n    // Originate from @ryantam626/jupyterlab_code_formatter\n    {\n        cellType: 'code',\n        command: 'jupyterlab_code_formatter:format',\n        icon: formatIcon,\n        tooltip: 'Format Cell'\n    },\n    // Originate from @jupyterlab/notebook-extension\n    {\n        command: 'notebook:delete-cell',\n        icon: deleteIcon\n    }\n];\nconst DEFAULT_RIGHT_MENU = [\n    // Originate from @jupyterlab/notebook-extension\n    {\n        command: 'notebook:delete-cell',\n        icon: deleteIcon\n    }\n];\nconst DEFAULT_HELPER_BUTTONS = [\n    // Originate from @jupyterlab/notebook-extension\n    {\n        command: 'notebook:run-cell-and-select-next',\n        icon: runIcon\n    },\n    {\n        command: 'notebook:move-cell-up',\n        icon: caretUpEmptyThinIcon\n    },\n    {\n        command: 'notebook:move-cell-down',\n        icon: caretDownEmptyThinIcon\n    },\n    {\n        command: 'notebook:insert-cell-below',\n        icon: addIcon\n    }\n];\nclass ToggleButton extends ReactWidget {\n    constructor(props = {}) {\n        super();\n        this.props = props;\n        this._toggled = false;\n        addToolbarButtonClass(this);\n    }\n    get toggled() {\n        return this._toggled;\n    }\n    set toggled(value) {\n        if (value !== this._toggled) {\n            this._toggled = value;\n            this.update();\n        }\n    }\n    render() {\n        const p = {\n            className: this.props.className\n                ? this.props.className(this.toggled)\n                : undefined,\n            label: this.props.label ? this.props.label(this.toggled) : undefined,\n            icon: this.props.icon ? this.props.icon(this.toggled) : undefined,\n            tooltip: this.props.tooltip\n                ? this.props.tooltip(this.toggled)\n                : undefined,\n            onClick: this.props.onClick\n                ? () => {\n                    this.toggled = !this.toggled;\n                    this.props.onClick(this.toggled);\n                }\n                : undefined,\n            enabled: this.props.enabled ? this.props.enabled(this.toggled) : undefined\n        };\n        return React.createElement(ToolbarButtonComponent, Object.assign({}, p));\n    }\n}\n/**\n * Positioned helper button\n */\nclass PositionedButton extends Widget {\n    constructor(item) {\n        super({ node: Private.createNode(item) });\n        this.addClass('jp-enh-cell-button');\n        this._callback = item.callback;\n    }\n    /**\n     * Handle the DOM events for the tab bar.\n     *\n     * @param event - The DOM event sent to the tab bar.\n     *\n     * #### Notes\n     * This method implements the DOM `EventListener` interface and is\n     * called in response to events on the tab bar's DOM node.\n     *\n     * This should not be called directly by user code.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'mousedown':\n                this._evtMouseDown(event);\n                break;\n        }\n    }\n    /**\n     * A message handler invoked on a `'before-attach'` message.\n     */\n    onBeforeAttach(msg) {\n        this.node.addEventListener('mousedown', this);\n    }\n    /**\n     * A message handler invoked on an `'after-detach'` message.\n     */\n    onAfterDetach(msg) {\n        this.node.removeEventListener('mousedown', this);\n    }\n    /**\n     * Handle the `'mousedown'` event for the tab bar.\n     */\n    _evtMouseDown(event) {\n        // Do nothing if it's not a left or middle mouse press.\n        if (event.button !== 0) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        this._callback();\n    }\n}\n/**\n * Toolbar icon menu container\n */\nclass CellMenu extends Widget {\n    constructor(commands, items) {\n        super();\n        this._commands = commands;\n        this.layout = new PanelLayout();\n        this.addClass('jp-enh-cell-menu');\n        this._addButtons(items);\n    }\n    handleEvent(event) {\n        switch (event.type) {\n            case 'mousedown':\n            case 'click':\n                // Ensure the mouse event is not propagated on the cell.\n                // As buttons are hidden except on the selected cell, this is fine.\n                event.stopPropagation();\n                break;\n        }\n    }\n    /**\n     * Handle `after-attach` messages for the widget.\n     */\n    onAfterAttach() {\n        this.node.addEventListener('mousedown', this);\n        this.node.addEventListener('click', this);\n    }\n    /**\n     * Handle `before-detach` messages for the widget.\n     */\n    onBeforeDetach() {\n        this.node.removeEventListener('mousedown', this);\n        this.node.removeEventListener('click', this);\n    }\n    _addButtons(items) {\n        each(this.children(), widget => {\n            widget.dispose();\n        });\n        const layout = this.layout;\n        items.forEach(entry => {\n            var _a, _b;\n            if (this._commands.hasCommand(entry.command)) {\n                layout.addWidget(new ToolbarButton({\n                    icon: LabIcon.resolve({ icon: entry.icon }),\n                    className: `jp-enh-cell-${(_a = entry.cellType) !== null && _a !== void 0 ? _a : 'all'}`,\n                    onClick: () => {\n                        this._commands.execute(entry.command);\n                    },\n                    tooltip: (_b = entry.tooltip) !== null && _b !== void 0 ? _b : this._commands.label(entry.command)\n                }));\n            }\n        });\n    }\n}\n/**\n * Cell Toolbar Widget\n */\nclass CellToolbarWidget extends Widget {\n    constructor(commands, leftMenuItems, rightMenuItems, leftSpace = 0, position = null) {\n        super();\n        this.layout = new PanelLayout();\n        this.addClass('jp-enh-cell-toolbar');\n        this.layout.addWidget(new CellMenu(commands, leftMenuItems));\n        // Set style\n        this.node.style.position = 'absolute';\n        if (position) {\n            this.node.style.right = `${position.right}px`;\n            this.node.style.top = `${position.top}px`;\n            this.node.style.justifyContent = 'flex-end';\n            this.node.style.width = 'max-content';\n            // Set a background if the toolbar overlaps the border\n            if (position.top < 22) {\n                this.addClass('jp-overlap');\n            }\n        }\n        else {\n            this.node.style.left = `${leftSpace}px`;\n            this.node.style.top = '0px';\n            this.node.style.width = `calc( 100% - ${leftSpace}px - ${getCSSVar('--jp-cell-collapser-width')} - ${getCSSVar('--jp-cell-prompt-width')} - ${getCSSVar('--jp-cell-padding')} )`;\n            this.layout.addWidget(Toolbar.createSpacerItem());\n        }\n        this.layout.addWidget(new CellMenu(commands, rightMenuItems));\n    }\n}\n/**\n * CellToolbarTracker\n */\nclass CellToolbarTracker {\n    constructor(panel, commands) {\n        this._isDisposed = false;\n        this._commands = commands;\n        this._panel = panel;\n        // Add lock tag button\n        this._unlockTagsButton = new ToggleButton({\n            className: () => 'jp-enh-cell-nb-button',\n            enabled: () => { var _a, _b, _c, _d; return (_d = (!((_a = this._panel) === null || _a === void 0 ? void 0 : _a.context.model.readOnly) && ((_c = (_b = this._panel) === null || _b === void 0 ? void 0 : _b.context.contentsModel) === null || _c === void 0 ? void 0 : _c.writable))) !== null && _d !== void 0 ? _d : false; },\n            icon: (state) => state ? lockedTagsIcon : unlockedTagsIcon,\n            tooltip: (state) => state ? 'Lock tags' : 'Unlock tags',\n            onClick: (state) => {\n            }\n        });\n        let insertionPoint = -1;\n        find(panel.toolbar.children(), (tbb, index) => {\n            insertionPoint = index; // It will be the last index or the cell type input\n            return tbb.hasClass('jp-Notebook-toolbarCellType');\n        });\n        panel.toolbar.insertItem(insertionPoint + 1, 'edit-tags', this._unlockTagsButton);\n        const cells = this._panel.context.model.cells;\n        cells.changed.connect(this.updateConnectedCells, this);\n        panel.context.fileChanged.connect(this._onFileChanged, this);\n    }\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    dispose() {\n        var _a, _b;\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        const cells = (_a = this._panel) === null || _a === void 0 ? void 0 : _a.context.model.cells;\n        if (cells) {\n            cells.changed.disconnect(this.updateConnectedCells, this);\n            each(cells.iter(), model => this._removeToolbar(model));\n        }\n        (_b = this._panel) === null || _b === void 0 ? void 0 : _b.context.fileChanged.disconnect(this._onFileChanged);\n        this._panel = null;\n    }\n    updateConnectedCells(cells, changed) {\n        changed.oldValues.forEach(model => this._removeToolbar(model));\n        changed.newValues.forEach(model => this._addToolbar(model));\n    }\n    _addToolbar(model) {\n        const cell = this._getCell(model);\n        if (cell) {\n            const helperButtons_ = DEFAULT_HELPER_BUTTONS.map(entry => entry.command.split(':')[1]);\n            const leftMenu = DEFAULT_LEFT_MENU;\n            const rightMenu = DEFAULT_RIGHT_MENU;\n            const leftSpace = 0;\n            const floatPosition = { right: 10, top: 10 }; // null\n            const toolbar = new CellToolbarWidget(this._commands, leftMenu, rightMenu, leftSpace, floatPosition);\n            toolbar.addClass(CELL_BAR_CLASS);\n            cell.layout.insertWidget(0, toolbar);\n            DEFAULT_HELPER_BUTTONS.filter(entry => helperButtons_.includes(entry.command.split(':')[1])).forEach(entry => {\n                if (this._commands.hasCommand(entry.command)) {\n                    const { cellType, command, tooltip } = entry, others = __rest(entry, [\"cellType\", \"command\", \"tooltip\"]);\n                    const shortName = command.split(':')[1];\n                    const button = new PositionedButton(Object.assign(Object.assign({}, others), { callback: () => {\n                            this._commands.execute(command);\n                        }, className: shortName && `jp-enh-cell-${shortName}`, tooltip: tooltip || this._commands.label(entry.command) }));\n                    button.addClass(CELL_BAR_CLASS);\n                    button.addClass(`jp-enh-cell-${cellType || 'all'}`);\n                    cell.layout.addWidget(button);\n                }\n            });\n        }\n    }\n    _getCell(model) {\n        var _a;\n        return (_a = this._panel) === null || _a === void 0 ? void 0 : _a.content.widgets.find(widget => widget.model === model);\n    }\n    _findToolbarWidgets(cell) {\n        const widgets = cell.layout.widgets;\n        // Search for header using the CSS class or use the first one if not found.\n        return widgets.filter(widget => widget.hasClass(CELL_BAR_CLASS)) || [];\n    }\n    _removeToolbar(model) {\n        const cell = this._getCell(model);\n        if (cell) {\n            this._findToolbarWidgets(cell).forEach(widget => widget.dispose());\n        }\n    }\n    _onFileChanged() {\n        this._unlockTagsButton.update();\n    }\n}\n/**\n * CellBarExtension\n */\nclass CellBarExtension {\n    constructor(commands) {\n        this._commands = commands;\n    }\n    createNew(panel) {\n        // 每当创建一个 Cell 时, 为其添加一个 CellToolbarTracker\n        return new CellToolbarTracker(panel, this._commands);\n    }\n}\n/**\n * Plugin\n */\nexport const cellToolBarPlugin = {\n    id: EXTENSION_ID,\n    autoStart: true,\n    activate: async (app) => {\n        // 每当打开一个 notebook 时, 创建一个 CellBarExtension\n        app.docRegistry.addWidgetExtension('Notebook', new CellBarExtension(app.commands));\n    },\n};\nvar Private;\n(function (Private) {\n    // eslint-disable-next-line no-inner-declarations\n    function createNode(item) {\n        const button = document.createElement('button');\n        if (item.tooltip) {\n            button.title = item.tooltip;\n        }\n        if (item.className) {\n            button.classList.add(item.className);\n        }\n        button.appendChild(LabIcon.resolve({ icon: item.icon }).element({\n            elementPosition: 'center',\n            elementSize: 'normal',\n            tag: 'span'\n        }));\n        return button;\n    }\n    Private.createNode = createNode;\n})(Private || (Private = {}));\n","/**\n * Pi Notebook\n */\nexport const piNotebookPlugin = {\n    id: 'pi_lab_jupyter_extension:pi_notebook_plugin',\n    autoStart: true,\n    activate: (app) => {\n        console.log('插件 pi_lab_jupyter_extension:pi_notebook_plugin 已激活.');\n    }\n};\n","import React, { useEffect, useState } from 'react';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { ReactWidget, ToolbarButton } from '@jupyterlab/apputils';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { Widget } from '@lumino/widgets';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport loading from '../style/ppt_view/loading.gif';\nimport pptViewStr from '../style/ppt_view/ppt-view.svg';\nconst subWindowRef = React.createRef();\nlet observer;\n/**\n * PPTComponent\n * @param props\n * @returns\n */\nconst PPTComponent = (props) => {\n    const [showLoading, setShowLoading] = useState(true);\n    let needDisplay;\n    let canBeDistroy;\n    useEffect(() => {\n        console.log(`path: ${props.path}`);\n        console.log('create PPTComponent...');\n        needDisplay = true;\n        canBeDistroy = false;\n        return function cleanup() {\n            console.log('destroy PPTComponent...');\n        };\n    });\n    const startRise = () => {\n        const subDocument = window.notebook.document;\n        const config = { attributes: false, childList: true, subtree: true };\n        const callback = (mutationRecords, observer) => {\n            for (let mutationRecord of mutationRecords) {\n                if (mutationRecord.type === 'childList') {\n                    // const node: Node = mutationRecord.target;\n                    if (needDisplay) {\n                        const riseBtn = window.notebook.document.getElementById('RISE');\n                        if (riseBtn) {\n                            console.log('start RISE...');\n                            setShowLoading(false);\n                            riseBtn.click();\n                            subWindowRef.current.style.width = '100%';\n                            subWindowRef.current.style.height = '100%';\n                            needDisplay = false;\n                            canBeDistroy = true;\n                            break;\n                        }\n                    }\n                    else if (canBeDistroy) {\n                        const exitBtn = window.notebook.document.getElementById('exit_b');\n                        if (!exitBtn) {\n                            console.log('exit RISE...');\n                            observer.disconnect();\n                            canBeDistroy = false;\n                            subWindowRef.current.style.width = '0';\n                            subWindowRef.current.style.height = '0';\n                            props.close();\n                        }\n                    }\n                }\n            }\n        };\n        observer = new MutationObserver(callback);\n        observer.observe(subDocument.body, config);\n    };\n    return (React.createElement(\"div\", { style: { \"height\": \"100vh\", \"width\": \"100vw\", \"background\": \"rgba(0,0,0,0.45)\" } },\n        React.createElement(\"div\", { ref: subWindowRef, style: { \"height\": \"0\", \"width\": \"0\" } },\n            React.createElement(\"iframe\", { name: \"notebook\", src: props.path, \n                // src=\"http://simeondemacbook-pro.local:8888/notebooks/files/matplotlib.tmp-ipynb.ipynb\"\n                height: \"100%\", width: \"100%\", scrolling: \"auto\", frameBorder: \"0\", onLoad: () => startRise() })),\n        React.createElement(\"img\", { src: loading, style: {\n                display: showLoading ? \"block\" : \"none\",\n                \"height\": \"80px\", \"width\": \"80px\", \"position\": \"fixed\", \"top\": \"48%\", \"left\": \"48%\"\n            } })));\n};\n/**\n * PPTTabWidget\n */\nclass PPTTabWidget extends ReactWidget {\n    constructor(context) {\n        super();\n        this.addClass('ppt-widgets-view');\n        this.id = 'ppt-widget';\n        this.context = context;\n    }\n    gen_notebook_url() {\n        const settings = ServerConnection.makeSettings();\n        const url = URLExt.join(settings.baseUrl, 'notebooks', this.context.path);\n        return url;\n    }\n    close() {\n        console.log('revert');\n        this.context.revert();\n        super.close();\n    }\n    render() {\n        return (React.createElement(PPTComponent, { path: this.gen_notebook_url(), close: () => this.close() }));\n    }\n}\n/**\n * PPT view button\n */\nclass PPTViewButton {\n    createNew(panel, context) {\n        const icon = new LabIcon({\n            name: 'launcher:ppt-view-icon',\n            svgstr: pptViewStr,\n        });\n        const openPPTView = () => {\n            const pptWidget = new PPTTabWidget(context);\n            Widget.attach(pptWidget, document.body);\n        };\n        console.log(panel);\n        console.log(context);\n        window.myPanel = panel;\n        window.myContext = context;\n        const button = new ToolbarButton({\n            className: 'ppt-view-button',\n            icon: icon,\n            tooltip: 'PPT',\n            onClick: openPPTView,\n        });\n        panel.toolbar.insertItem(10, 'openPPTViews', button);\n        return new DisposableDelegate(() => {\n            button.dispose();\n        });\n    }\n}\n/**\n * Initialization data for the @pi-lab-extension/ppt-view extension.\n */\nexport const pptViewPlugin = {\n    id: 'pi_lab_jupyter_extension:ppt_view_plugin',\n    autoStart: true,\n    activate: (app) => {\n        app.docRegistry.addWidgetExtension('Notebook', new PPTViewButton());\n    }\n};\n","export default __webpack_public_path__ + \"a5dd3bc133cc9f5d9a9170539c2f7dfec933b9ab7c02eeb7a761bbd97d22d3ff.gif\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"16px\\\" height=\\\"16px\\\">\\n    <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\" />\\n    <path class=\\\"jp-icon3\\\" fill=\\\"#626262\\\" d=\\\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\\\" />\\n</svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"16px\\\" height=\\\"16px\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n    <path class=\\\"jp-icon3\\\" fill=\\\"#626262\\\" d=\\\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\\\" />\\n</svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" focusable=\\\"false\\\" width=\\\"16px\\\"\\n    height=\\\"16px\\\" style=\\\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);\\\"\\n    preserveAspectRatio=\\\"xMidYMid meet\\\" viewBox=\\\"0 0 1792 1792\\\">\\n    <path class=\\\"jp-icon3\\\"\\n        d=\\\"M1473 929q7-118-33-226.5t-113-189t-177-131T929 325q-116-7-225.5 32t-192 110.5t-135 175T317 863q-7 118 33 226.5t113 189t177.5 131T862 1467q155 9 293-59t224-195.5t94-283.5zM1792 0l-349 348q120 117 180.5 272t50.5 321q-11 183-102 339t-241 255.5T999 1660L0 1792l347-347q-120-116-180.5-271.5T116 852q11-184 102-340t241.5-255.5T792 132q167-22 500-66t500-66z\\\"\\n        fill=\\\"#626262\\\" />\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" standalone=\\\"no\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 20010904//EN\\\" \\\"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\\\">\\n<svg version=\\\"1.0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"50.000000pt\\\" height=\\\"50.000000pt\\\"\\n    viewBox=\\\"0 0 50.000000 50.000000\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n\\n    <g transform=\\\"translate(0.000000,50.000000) scale(0.100000,-0.100000)\\\" fill=\\\"#000000\\\" stroke=\\\"none\\\">\\n        <path d=\\\"M52 408 c-8 -8 -12 -54 -12 -140 0 -107 -2 -128 -15 -128 -21 0 -19\\n-23 3 -43 16 -15 47 -17 224 -17 186 0 206 2 221 18 21 23 22 42 2 42 -13 0\\n-15 21 -15 128 0 86 -4 132 -12 140 -17 17 -379 17 -396 0z m383 -138 l0 -125\\n-185 0 -185 0 -3 114 c-1 63 0 121 2 128 4 11 43 13 188 11 l183 -3 0 -125z\\nm30 -160 c-8 -14 -422 -14 -430 0 -4 7 70 10 215 10 145 0 219 -3 215 -10z\\\" />\\n        <path d=\\\"M190 270 l0 -80 53 30 c87 51 84 49 67 60 -8 5 -39 23 -67 40 l-53\\n30 0 -80z m60 25 c17 -9 30 -20 30 -25 0 -8 -51 -40 -65 -40 -3 0 -5 18 -5 40\\n0 45 0 46 40 25z\\\" />\\n    </g>\\n</svg>\\n\";"],"names":[],"sourceRoot":""}