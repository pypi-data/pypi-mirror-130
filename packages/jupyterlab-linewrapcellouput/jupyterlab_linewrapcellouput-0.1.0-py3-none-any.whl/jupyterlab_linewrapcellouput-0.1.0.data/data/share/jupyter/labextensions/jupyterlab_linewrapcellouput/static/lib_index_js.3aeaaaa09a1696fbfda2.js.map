{"version":3,"file":"lib_index_js.3aeaaaa09a1696fbfda2.js","mappings":";;;;;;;;;;;;;;;;;;AAAwD;AACH;AACrD;AACA;AACA;AACA,kEAAkE,wBAAwB;AAC1F;AACA,kEAAkE,mBAAmB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAAa;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,kEAAkB,SAAS,mBAAmB;AACjE;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://jupyterlab_linewrapcellouput/./lib/index.js"],"sourcesContent":["import { DisposableDelegate } from '@lumino/disposable';\r\nimport { ToolbarButton } from '@jupyterlab/apputils';\r\nfunction print(msg, status) {\r\n    console.log(msg);\r\n    if (status)\r\n        document.styleSheets[1].insertRule(\"div.output_area pre { white-space: pre-wrap; }\");\r\n    else\r\n        document.styleSheets[1].insertRule(\"div.output_area pre { white-space: pre; }\");\r\n}\r\n/**\r\n * Initialization data for the jupyterlab_linewrapcelloutput extension.\r\n */\r\nconst plugin = {\r\n    id: 'jupyterlab_linewrapcelloutput:plugin',\r\n    autoStart: true,\r\n    activate: (app) => {\r\n        console.log('JupyterLab extension jupyterlab_linewrapcelloutput is activated!');\r\n        app.docRegistry.addWidgetExtension('Notebook', new ButtonLineWrapCellOutput());\r\n    }\r\n};\r\nexport class ButtonLineWrapCellOutput {\r\n    createNew(panel, context) {\r\n        const triggerLineWrapCellOutput = () => {\r\n            if (SET) {\r\n                SET = false;\r\n                if (button.hasClass('selected'))\r\n                    button.removeClass('selected');\r\n                print('disabled line wrap', false);\r\n            }\r\n            else {\r\n                SET = true;\r\n                button.addClass('selected');\r\n                print('enabled line wrap', true);\r\n            }\r\n        };\r\n        const button = new ToolbarButton({\r\n            className: 'buttonLineWrapCellOuput',\r\n            iconClass: 'wll-WrapIcon',\r\n            label: 'wrap',\r\n            onClick: triggerLineWrapCellOutput,\r\n            tooltip: 'Line Wrap Cell Ouput'\r\n        });\r\n        panel.toolbar.insertItem(10, 'LineWrapCellOutput', button);\r\n        var SET = true;\r\n        button.addClass('selected');\r\n        return new DisposableDelegate(() => { button.dispose(); });\r\n    }\r\n}\r\nexport default plugin;\r\n"],"names":[],"sourceRoot":""}