// Generated by CoffeeScript 1.8.0
(function() {
  var add_new_item, do_editor, do_fix_editor, dump_item_dom, dump_items, dump_items_dom;

  this.get_GET_arg = function(name) {
    var r, reg;
    reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    r = window.location.search.substr(1).match(reg);
    if (r) {
      return unescape(r[2]);
    }
  };

  this.delete_nav = function(button_dom) {
    var nav_item_dom;
    button_dom = $(button_dom);
    nav_item_dom = button_dom.parents('li');
    nav_item_dom.remove();
    return false;
  };

  this.get_page_md_filepath_from_item = function(inner_dom) {
    var md_filepath, nav_item_dom, url, url_path;
    inner_dom = $(inner_dom);
    nav_item_dom = inner_dom.parents('li');
    url = nav_item_dom.find('input[name=url]').val();
    url = $.trim(url);
    md_filepath = '';
    if (url) {
      url_path = url.split('?')[0];
      if (/^[a-z0-9/]+\.(md|markdown|mk|txt)$/i.test(url_path)) {
        md_filepath = url_path;
      }
    }
    return md_filepath;
  };

  this.show_or_hide_edit_button = function(inner_dom) {
    var edit_button, md_filepath, nav_item_dom, url;
    inner_dom = $(inner_dom);
    md_filepath = get_page_md_filepath_from_item(inner_dom);
    nav_item_dom = inner_dom.parents('li');
    edit_button = nav_item_dom.find('.edit_page');
    if (md_filepath) {
      url = "/system/site/pages?path=" + md_filepath;
      if (typeof site_id !== "undefined" && site_id !== null) {
        url += '&site_id=' + site_id;
      }
      edit_button.attr('href', url);
      return edit_button.css('display', 'inline');
    } else {
      return edit_button.css('display', 'none');
    }
  };

  add_new_item = function() {
    do_fix_editor();
    $('.sortable').append($('.li_template').html());
    return false;
  };

  do_editor = function() {
    return $('.sortable').nestedSortable({
      handle: 'div',
      items: 'li',
      toleranceElement: '> div',
      maxLevels: 3
    });
  };

  do_fix_editor = function() {
    if (!$('.sortable > li').length && $('.sortable > ol').length) {
      return $('.sortable').html($('.sortable > ol').html());
    }
  };

  dump_item_dom = function(dom) {
    var children_doms, item;
    item = {};
    dom = $(dom);
    dom.children('div').children('input').each(function() {
      var input_dom, input_dom_name, input_dom_value;
      input_dom = $(this);
      input_dom_name = input_dom.attr('name');
      input_dom_value = input_dom.val();
      if (input_dom_name) {
        return item[input_dom_name] = input_dom_value;
      }
    });
    if (dom.children('ol').length || dom.next('ol').length) {
      item['children'] = [];
      if (dom.children('ol').length) {
        children_doms = dom.children('ol').children('li');
      } else {
        children_doms = dom.next('ol').children('li');
      }
      children_doms.each(function() {
        var sub_item;
        sub_item = dump_item_dom(this);
        if (sub_item) {
          return item['children'].push(sub_item);
        }
      });
    }
    return item;
  };

  dump_items_dom = function(dom) {
    var items;
    items = [];
    $(dom).children('li').each(function() {
      var item;
      item = dump_item_dom(this);
      if ('name' in item) {
        return items.push(item);
      }
    });
    return items;
  };

  dump_items = function() {
    var result, url_to_post, user_nav_disabled;
    do_fix_editor();
    result = dump_items_dom('ol.sortable');
    if (typeof JSON !== "undefined" && JSON !== null) {
      result = JSON.stringify(result, null, 4);
    } else {
      result = $.toJSON(result);
    }
    if (typeof post_url !== "undefined" && post_url !== null) {
      url_to_post = post_url;
    } else {
      url_to_post = location.href;
    }
    if (Essage) {
      Essage.show('sending data now...');
    }
    user_nav_disabled = $("#nav_disable").prop('checked');
    $.ajax({
      method: 'post',
      url: url_to_post,
      data: {
        raw_content: result,
        user_nav_disabled: user_nav_disabled
      },
      success: function() {
        if (Essage) {
          return Essage.show({
            message: "Navigation configs are saved",
            status: "success"
          }, 2000);
        }
      }
    });
    return false;
  };

  $(document).ready(function() {
    do_editor();
    $('#new_item').click(add_new_item);
    $('#save_nav').click(dump_items);
    $('.sortable').nestedSortable({
      handle: 'div',
      items: 'li',
      tolerance: 'pointer',
      toleranceElement: '> div',
      isAllowed: function(placeholder, placeholderParent, currentItem) {
        var pre_dom;
        pre_dom = placeholder.prev();
        if (pre_dom.hasClass('sortable')) {
          return false;
        }
        return true;
      }
    });
    return $('input[name=url]').each(function() {
      var url_input_dom;
      url_input_dom = $(this);
      return show_or_hide_edit_button(url_input_dom);
    });
  });

}).call(this);
