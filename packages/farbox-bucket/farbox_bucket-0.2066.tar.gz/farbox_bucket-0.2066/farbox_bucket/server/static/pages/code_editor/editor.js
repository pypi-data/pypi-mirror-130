// Generated by CoffeeScript 1.8.0
(function() {
  this.need_sync = false;

  this.keep_sync_binded = false;

  this.sync_per_seconds = 20;

  this.keep_sync = (function(_this) {
    return function() {
      var diff_seconds;
      if (!_this.need_sync) {
        return false;
      } else if (_this.last_sync_at) {
        diff_seconds = _this.sync_per_seconds - (new Date() - _this.last_sync_at) / 1000;
        $('.precess').css('width', 100 * (1 - diff_seconds / _this.sync_per_seconds) + '%');
        if (diff_seconds > 0) {

        } else {
          return _this.save_doc();
        }
      }
    };
  })(this);

  this.hit_sync = (function(_this) {
    return function() {
      if (!_this.keep_sync_binded) {
        _this.keep_sync_binded = true;
        setInterval(_this.keep_sync, 300);
        _this.last_sync_at = new Date();
        _this.need_sync = true;
      }
      if (!_this.need_sync) {
        _this.last_sync_at = new Date();
      }
      _this.need_sync = true;
      return $('#save_button').css('display', 'block');
    };
  })(this);

  this.save_doc = function() {
    var content, doc_path;
    this.need_sync = false;
    $('.precess').css('width', 0);
    $('#save_button a').text('saving...');
    doc_path = $('#doc_path').val();
    content = this.doc.getValue();
    return $.ajax({
      url: '/__file_manager_api',
      method: 'post',
      data: {
        raw_content: content,
        path: doc_path
      },
      success: function(sync_info) {
        $('#save_button').css('display', 'none');
        return $('#save_button a').text('save');
      },
      error: function(error_data) {
        var error_obj;
        error_obj = error_data.responseJSON || error_data.responseText;
        if (typeof error_obj === 'string') {
          return error_obj = JSON.parse(error_obj);
        }
      }
    });
  };

  this.save_doc_by_shortcut = (function(_this) {
    return function() {
      if ($('#save_button').css('display') !== 'none') {
        return _this.save_doc();
      }
    };
  })(this);

  $(document).ready((function(_this) {
    return function() {
      var ext, mode;
      ext = location.pathname.split('.').pop();
      if (ext === 'jade') {
        mode = {
          name: "jade",
          alignCDATA: true
        };
      } else if (ext === 'html' || ext === 'xml') {
        mode = 'text/html';
      } else if (ext === 'js' || ext === 'json') {
        mode = 'javascript';
      } else if (ext === 'less') {
        mode = "text/x-less";
      } else if (ext === 'sass' || ext === 'scss') {
        mode = "text/x-scss";
      } else if (ext === 'css') {
        mode = 'text/css';
      } else if (ext === 'coffee') {
        mode = 'text/x-coffeescript';
      } else if (ext === 'txt' || ext === 'md' || ext === 'markdown' || ext === 'mk') {
        mode = 'text/x-markdown';
      } else {
        mode = '';
      }
      _this.code_editor = CodeMirror(document.getElementById("editor"), {
        value: $('#content_container').val(),
        lineNumbers: true,
        lineWrapping: true,
        matchBrackets: true,
        mode: mode,
        theme: 'solarized',
        indentWithTabs: true
      });
      _this.doc = _this.code_editor.getDoc();
      _this.doc.on('change', function(the_doc, change_obj) {
        return _this.hit_sync();
      });
      return $(window).keydown(function() {
        var _ref, _ref1;
        if (((_ref = event.which) === 83 || _ref === 115) && (event.ctrlKey || event.metaKey)) {
          event.preventDefault();
          _this.save_doc_by_shortcut();
          return false;
        }
        if (((_ref1 = event.which) === 69 || _ref1 === 101) && (event.ctrlKey || event.metaKey) && window.parent && window.parent.toggle_files_manager) {
          event.preventDefault();
          window.parent.toggle_files_manager();
          return false;
        } else {
          return true;
        }
      });
    };
  })(this));

}).call(this);
