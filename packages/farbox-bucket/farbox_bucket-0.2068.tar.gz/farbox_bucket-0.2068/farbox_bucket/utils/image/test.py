# coding: utf8
import base64
try:
    from pgmagick import Blob, Image
except:
    Blob, Image = None, None
from .resize import resize_image
from .utils import get_image_type, get_im_size


def get_raw_image_content():
    b64_content = ''
    raw_content = base64.b64decode(b64_content)
    return raw_content

def get_demo_im():
    raw_content = get_raw_image_content()
    im = Image(Blob(raw_content))
    return im



def test_image_functions():
    raw_image_content = get_raw_image_content()
    print('original size',len(raw_image_content))
    print('image_type is ', get_image_type(raw_image_content))

    im = get_demo_im()
    print('image size is', get_im_size(im))

    for image_type in ['jpg', 'webp', 'png']:
        resized_image_content = resize_image(im, width=600, height=600, image_type=image_type)
        print(image_type, len(resized_image_content))

    im_data = resize_image(im, width=600, height=600, image_type='jpg')
    new_im = Image(Blob(im_data))
    resized_image_content = resize_image(new_im, width=600, height=600, image_type='webp')
    new_webp_im = Image(Blob(resized_image_content))
    print('->jpg->webp size', get_im_size(new_webp_im))
    print('->jpg->webp size', len(resized_image_content))


    resized_image_content = resize_image(im, width=60, height=60, image_type=image_type)
    resized_image = Image(Blob(resized_image_content))
    print('resized image size is', get_im_size(resized_image))