// Generated by CoffeeScript 1.8.0
(function() {
  var file_field_init;

  file_field_init = function(dom, filepath, post_url, auto_reload) {
    var hover_border_style, old_border_style;
    dom = $(dom);
    filepath = filepath || 'data.zip';
    post_url = post_url || '/__file_manager_api';
    old_border_style = dom.css('border');
    hover_border_style = '1px solid indianred';
    if (typeof auto_reload === "undefined") {
      auto_reload = false;
    }
    return dom.on({
      drop: (function(_this) {
        return function(e) {
          var f, fd, file_list, xhr;
          e.preventDefault();
          file_list = e.originalEvent.dataTransfer.files;
          if (file_list.length === 1) {
            if (Essage) {
              Essage.show('uploading file now...');
            }
            f = file_list[0];
            xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function() {
              var do_reload;
              if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                  dom.css('border', old_border_style);
                  if (Essage) {
                    Essage.show('uploading finished', 3000);
                  }
                  if (auto_reload) {
                    do_reload = confirm('file is uploaded, are you sure to refresh current page (make sure your contents are saved before refreshing)?');
                    if (do_reload) {
                      return window.location.reload();
                    }
                  }
                } else if (xhr.status > 200) {
                  dom.css('border', old_border_style);
                  if (Essage) {
                    return Essage.show('uploading failed!!', 5000);
                  }
                }
              }
            };
            xhr.open("post", post_url, true);
            fd = new FormData();
            fd.append(filepath, f);
            return xhr.send(fd);
          }
        };
      })(this),
      dragleave: (function(_this) {
        return function(e) {
          e.preventDefault();
          return dom.css('border', old_border_style);
        };
      })(this),
      dragenter: (function(_this) {
        return function(e) {
          e.preventDefault();
          return dom.css('border', hover_border_style);
        };
      })(this),
      dragover: (function(_this) {
        return function(e) {
          e.preventDefault();
          return dom.css('border', hover_border_style);
        };
      })(this)
    });
  };

  $(document).ready(function() {
    return $('.form_file_dom').each(function() {
      var auto_reload, dom, filepath, post_url;
      dom = $(this);
      filepath = $.trim(dom.attr('data-filepath'));
      post_url = $.trim(dom.attr('data-post-url'));
      auto_reload = $.trim(dom.attr('data-auto-reload'));
      return file_field_init(dom, filepath, post_url, auto_reload);
    });
  });

}).call(this);
