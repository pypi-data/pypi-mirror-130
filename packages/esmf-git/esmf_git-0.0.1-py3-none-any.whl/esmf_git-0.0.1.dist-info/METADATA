Metadata-Version: 2.1
Name: esmf-git
Version: 0.0.1
Summary: Standard Git Library for ESMF applications.
Home-page: UNKNOWN
Author: Ryan Long
Author-email: ryan.long@noaa.gov
License: MIT
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Description-Content-Type: text/x-rst
License-File: LICENSE


Standard Git Library for ESMF applications.

===========================================



**esmf-git** is a library for implementing Git functionality inside a python application.



The ``_command_safe`` wrapper does a few things:



Foremost, the git CLI does not return robust error codes, pass or fail.  It also can return a failure for an acceptable command.  For example, calling ``git push`` raises a ``subprocess.CalledProcessError`` if there is nothing new to push.



With the wrapper, the error is first inspected.  If there is a critical error, the ``stderr`` will have a value. That value is logged at the ERROR level and the exception is re-raised.  



If ``stderr`` is **None**, a ``subprocess.CompletedProcess`` is created and returned in order to stay persistent with the standard successful return object.



``stdout`` is always logged at the INFO level is a ``subprocess.CalledProcessError`` is raised.



The wrapper also provides a backwards compatible way of handling output streams, raises an exception if return code is not 0, and sets the default encoding.





Basic Usage

-----------



::



    import esmf_git as git



    result = git.status("/path/to/repo") 

    print(result) # equivalent to 'git status'







Installation

------------



::



    $ pip install esmf-git



