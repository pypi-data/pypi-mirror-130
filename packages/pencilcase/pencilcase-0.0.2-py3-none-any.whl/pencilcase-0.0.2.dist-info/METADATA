Metadata-Version: 2.1
Name: pencilcase
Version: 0.0.2
Summary: A little box of Python tools.
Home-page: https://github.com/csvoss/pencil
Author: Chelsea Voss
Author-email: csvoss@csvoss.com
License: UNKNOWN
Platform: UNKNOWN
Description-Content-Type: text/markdown
Requires-Dist: prompt-toolkit (>2.0.0)
Requires-Dist: pygments (==2.10.0)

```
import pencilcase
```


# pencil

Drop-in debugger that allows you to write code while you debug. ‚úèÔ∏è

Pencil it in! Write code by debugging your code. Lines of code are
automatically inserted into your file. Clean them up later and voil√†!

```
pencilcase.pencil()
```

# timer

Super simple drop-in profiler. ‚è±

Context manager that counts how much time is spent across all executions
of the contained code block, storing it in seconds to the specified global
variable. Prints out the value of that variable each time it is run.

```
with pencilcase.timer('weaving_baskets'):
    weave_baskets()
```

Alternatively, apply as a decorator to a function to count time spent in
that function.


```
@pencilcase.timer('weaving_baskets')
def weave_baskets():
    ...
```

# eraser
This is a totally unnecessary feature, but who has a pencil case without an eraser??

```
pencilcase.eraser()
```

# microfilm

Pretty-print the given dict as JSON. üéû

```
blob = ...
pencilcase.microfilm(blob)
```

# butterfly_net

Context manager that catches all exceptions raised within, doing nothing but
printing their lovely exception traces and then letting them be free. ü¶ã

```
with pencilcase.butterfly_net():
    ...
```

