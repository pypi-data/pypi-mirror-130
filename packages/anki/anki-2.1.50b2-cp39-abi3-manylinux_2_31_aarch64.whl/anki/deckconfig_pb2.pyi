"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DeckConfigId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DCID_FIELD_NUMBER: builtins.int
    dcid: builtins.int = ...
    def __init__(self,
        *,
        dcid : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dcid",b"dcid"]) -> None: ...
global___DeckConfigId = DeckConfigId

class DeckConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Config(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class NewCardInsertOrder(_NewCardInsertOrder, metaclass=_NewCardInsertOrderEnumTypeWrapper):
            pass
        class _NewCardInsertOrder:
            V = typing.NewType('V', builtins.int)
        class _NewCardInsertOrderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NewCardInsertOrder.V], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            NEW_CARD_INSERT_ORDER_DUE = DeckConfig.Config.NewCardInsertOrder.V(0)
            NEW_CARD_INSERT_ORDER_RANDOM = DeckConfig.Config.NewCardInsertOrder.V(1)

        NEW_CARD_INSERT_ORDER_DUE = DeckConfig.Config.NewCardInsertOrder.V(0)
        NEW_CARD_INSERT_ORDER_RANDOM = DeckConfig.Config.NewCardInsertOrder.V(1)

        class NewCardGatherPriority(_NewCardGatherPriority, metaclass=_NewCardGatherPriorityEnumTypeWrapper):
            pass
        class _NewCardGatherPriority:
            V = typing.NewType('V', builtins.int)
        class _NewCardGatherPriorityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NewCardGatherPriority.V], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            NEW_CARD_GATHER_PRIORITY_DECK = DeckConfig.Config.NewCardGatherPriority.V(0)
            NEW_CARD_GATHER_PRIORITY_LOWEST_POSITION = DeckConfig.Config.NewCardGatherPriority.V(1)
            NEW_CARD_GATHER_PRIORITY_HIGHEST_POSITION = DeckConfig.Config.NewCardGatherPriority.V(2)

        NEW_CARD_GATHER_PRIORITY_DECK = DeckConfig.Config.NewCardGatherPriority.V(0)
        NEW_CARD_GATHER_PRIORITY_LOWEST_POSITION = DeckConfig.Config.NewCardGatherPriority.V(1)
        NEW_CARD_GATHER_PRIORITY_HIGHEST_POSITION = DeckConfig.Config.NewCardGatherPriority.V(2)

        class NewCardSortOrder(_NewCardSortOrder, metaclass=_NewCardSortOrderEnumTypeWrapper):
            pass
        class _NewCardSortOrder:
            V = typing.NewType('V', builtins.int)
        class _NewCardSortOrderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NewCardSortOrder.V], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            NEW_CARD_SORT_ORDER_TEMPLATE_THEN_LOWEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(0)
            NEW_CARD_SORT_ORDER_TEMPLATE_THEN_HIGHEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(1)
            NEW_CARD_SORT_ORDER_TEMPLATE_THEN_RANDOM = DeckConfig.Config.NewCardSortOrder.V(2)
            NEW_CARD_SORT_ORDER_LOWEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(3)
            NEW_CARD_SORT_ORDER_HIGHEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(4)
            NEW_CARD_SORT_ORDER_RANDOM = DeckConfig.Config.NewCardSortOrder.V(5)
            NEW_CARD_SORT_ORDER_TEMPLATE_ONLY = DeckConfig.Config.NewCardSortOrder.V(6)
            """Sorts by template, preserving original gather order."""

            NEW_CARD_SORT_ORDER_NO_SORT = DeckConfig.Config.NewCardSortOrder.V(7)
            """Preserves original gather order (eg deck order)"""


        NEW_CARD_SORT_ORDER_TEMPLATE_THEN_LOWEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(0)
        NEW_CARD_SORT_ORDER_TEMPLATE_THEN_HIGHEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(1)
        NEW_CARD_SORT_ORDER_TEMPLATE_THEN_RANDOM = DeckConfig.Config.NewCardSortOrder.V(2)
        NEW_CARD_SORT_ORDER_LOWEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(3)
        NEW_CARD_SORT_ORDER_HIGHEST_POSITION = DeckConfig.Config.NewCardSortOrder.V(4)
        NEW_CARD_SORT_ORDER_RANDOM = DeckConfig.Config.NewCardSortOrder.V(5)
        NEW_CARD_SORT_ORDER_TEMPLATE_ONLY = DeckConfig.Config.NewCardSortOrder.V(6)
        """Sorts by template, preserving original gather order."""

        NEW_CARD_SORT_ORDER_NO_SORT = DeckConfig.Config.NewCardSortOrder.V(7)
        """Preserves original gather order (eg deck order)"""


        class ReviewCardOrder(_ReviewCardOrder, metaclass=_ReviewCardOrderEnumTypeWrapper):
            pass
        class _ReviewCardOrder:
            V = typing.NewType('V', builtins.int)
        class _ReviewCardOrderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ReviewCardOrder.V], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REVIEW_CARD_ORDER_DAY = DeckConfig.Config.ReviewCardOrder.V(0)
            REVIEW_CARD_ORDER_DAY_THEN_DECK = DeckConfig.Config.ReviewCardOrder.V(1)
            REVIEW_CARD_ORDER_DECK_THEN_DAY = DeckConfig.Config.ReviewCardOrder.V(2)
            REVIEW_CARD_ORDER_INTERVALS_ASCENDING = DeckConfig.Config.ReviewCardOrder.V(3)
            REVIEW_CARD_ORDER_INTERVALS_DESCENDING = DeckConfig.Config.ReviewCardOrder.V(4)
            REVIEW_CARD_ORDER_EASE_ASCENDING = DeckConfig.Config.ReviewCardOrder.V(5)
            REVIEW_CARD_ORDER_EASE_DESCENDING = DeckConfig.Config.ReviewCardOrder.V(6)

        REVIEW_CARD_ORDER_DAY = DeckConfig.Config.ReviewCardOrder.V(0)
        REVIEW_CARD_ORDER_DAY_THEN_DECK = DeckConfig.Config.ReviewCardOrder.V(1)
        REVIEW_CARD_ORDER_DECK_THEN_DAY = DeckConfig.Config.ReviewCardOrder.V(2)
        REVIEW_CARD_ORDER_INTERVALS_ASCENDING = DeckConfig.Config.ReviewCardOrder.V(3)
        REVIEW_CARD_ORDER_INTERVALS_DESCENDING = DeckConfig.Config.ReviewCardOrder.V(4)
        REVIEW_CARD_ORDER_EASE_ASCENDING = DeckConfig.Config.ReviewCardOrder.V(5)
        REVIEW_CARD_ORDER_EASE_DESCENDING = DeckConfig.Config.ReviewCardOrder.V(6)

        class ReviewMix(_ReviewMix, metaclass=_ReviewMixEnumTypeWrapper):
            pass
        class _ReviewMix:
            V = typing.NewType('V', builtins.int)
        class _ReviewMixEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ReviewMix.V], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REVIEW_MIX_MIX_WITH_REVIEWS = DeckConfig.Config.ReviewMix.V(0)
            REVIEW_MIX_AFTER_REVIEWS = DeckConfig.Config.ReviewMix.V(1)
            REVIEW_MIX_BEFORE_REVIEWS = DeckConfig.Config.ReviewMix.V(2)

        REVIEW_MIX_MIX_WITH_REVIEWS = DeckConfig.Config.ReviewMix.V(0)
        REVIEW_MIX_AFTER_REVIEWS = DeckConfig.Config.ReviewMix.V(1)
        REVIEW_MIX_BEFORE_REVIEWS = DeckConfig.Config.ReviewMix.V(2)

        class LeechAction(_LeechAction, metaclass=_LeechActionEnumTypeWrapper):
            pass
        class _LeechAction:
            V = typing.NewType('V', builtins.int)
        class _LeechActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LeechAction.V], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            LEECH_ACTION_SUSPEND = DeckConfig.Config.LeechAction.V(0)
            LEECH_ACTION_TAG_ONLY = DeckConfig.Config.LeechAction.V(1)

        LEECH_ACTION_SUSPEND = DeckConfig.Config.LeechAction.V(0)
        LEECH_ACTION_TAG_ONLY = DeckConfig.Config.LeechAction.V(1)

        LEARN_STEPS_FIELD_NUMBER: builtins.int
        RELEARN_STEPS_FIELD_NUMBER: builtins.int
        NEW_PER_DAY_FIELD_NUMBER: builtins.int
        REVIEWS_PER_DAY_FIELD_NUMBER: builtins.int
        NEW_PER_DAY_MINIMUM_FIELD_NUMBER: builtins.int
        INITIAL_EASE_FIELD_NUMBER: builtins.int
        EASY_MULTIPLIER_FIELD_NUMBER: builtins.int
        HARD_MULTIPLIER_FIELD_NUMBER: builtins.int
        LAPSE_MULTIPLIER_FIELD_NUMBER: builtins.int
        INTERVAL_MULTIPLIER_FIELD_NUMBER: builtins.int
        MAXIMUM_REVIEW_INTERVAL_FIELD_NUMBER: builtins.int
        MINIMUM_LAPSE_INTERVAL_FIELD_NUMBER: builtins.int
        GRADUATING_INTERVAL_GOOD_FIELD_NUMBER: builtins.int
        GRADUATING_INTERVAL_EASY_FIELD_NUMBER: builtins.int
        NEW_CARD_INSERT_ORDER_FIELD_NUMBER: builtins.int
        NEW_CARD_GATHER_PRIORITY_FIELD_NUMBER: builtins.int
        NEW_CARD_SORT_ORDER_FIELD_NUMBER: builtins.int
        NEW_MIX_FIELD_NUMBER: builtins.int
        REVIEW_ORDER_FIELD_NUMBER: builtins.int
        INTERDAY_LEARNING_MIX_FIELD_NUMBER: builtins.int
        LEECH_ACTION_FIELD_NUMBER: builtins.int
        LEECH_THRESHOLD_FIELD_NUMBER: builtins.int
        DISABLE_AUTOPLAY_FIELD_NUMBER: builtins.int
        CAP_ANSWER_TIME_TO_SECS_FIELD_NUMBER: builtins.int
        SHOW_TIMER_FIELD_NUMBER: builtins.int
        SKIP_QUESTION_WHEN_REPLAYING_ANSWER_FIELD_NUMBER: builtins.int
        BURY_NEW_FIELD_NUMBER: builtins.int
        BURY_REVIEWS_FIELD_NUMBER: builtins.int
        OTHER_FIELD_NUMBER: builtins.int
        @property
        def learn_steps(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        @property
        def relearn_steps(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        new_per_day: builtins.int = ...
        reviews_per_day: builtins.int = ...
        new_per_day_minimum: builtins.int = ...
        """not currently used"""

        initial_ease: builtins.float = ...
        easy_multiplier: builtins.float = ...
        hard_multiplier: builtins.float = ...
        lapse_multiplier: builtins.float = ...
        interval_multiplier: builtins.float = ...
        maximum_review_interval: builtins.int = ...
        minimum_lapse_interval: builtins.int = ...
        graduating_interval_good: builtins.int = ...
        graduating_interval_easy: builtins.int = ...
        new_card_insert_order: global___DeckConfig.Config.NewCardInsertOrder.V = ...
        new_card_gather_priority: global___DeckConfig.Config.NewCardGatherPriority.V = ...
        new_card_sort_order: global___DeckConfig.Config.NewCardSortOrder.V = ...
        new_mix: global___DeckConfig.Config.ReviewMix.V = ...
        review_order: global___DeckConfig.Config.ReviewCardOrder.V = ...
        interday_learning_mix: global___DeckConfig.Config.ReviewMix.V = ...
        leech_action: global___DeckConfig.Config.LeechAction.V = ...
        leech_threshold: builtins.int = ...
        disable_autoplay: builtins.bool = ...
        cap_answer_time_to_secs: builtins.int = ...
        show_timer: builtins.bool = ...
        skip_question_when_replaying_answer: builtins.bool = ...
        bury_new: builtins.bool = ...
        bury_reviews: builtins.bool = ...
        other: builtins.bytes = ...
        def __init__(self,
            *,
            learn_steps : typing.Optional[typing.Iterable[builtins.float]] = ...,
            relearn_steps : typing.Optional[typing.Iterable[builtins.float]] = ...,
            new_per_day : builtins.int = ...,
            reviews_per_day : builtins.int = ...,
            new_per_day_minimum : builtins.int = ...,
            initial_ease : builtins.float = ...,
            easy_multiplier : builtins.float = ...,
            hard_multiplier : builtins.float = ...,
            lapse_multiplier : builtins.float = ...,
            interval_multiplier : builtins.float = ...,
            maximum_review_interval : builtins.int = ...,
            minimum_lapse_interval : builtins.int = ...,
            graduating_interval_good : builtins.int = ...,
            graduating_interval_easy : builtins.int = ...,
            new_card_insert_order : global___DeckConfig.Config.NewCardInsertOrder.V = ...,
            new_card_gather_priority : global___DeckConfig.Config.NewCardGatherPriority.V = ...,
            new_card_sort_order : global___DeckConfig.Config.NewCardSortOrder.V = ...,
            new_mix : global___DeckConfig.Config.ReviewMix.V = ...,
            review_order : global___DeckConfig.Config.ReviewCardOrder.V = ...,
            interday_learning_mix : global___DeckConfig.Config.ReviewMix.V = ...,
            leech_action : global___DeckConfig.Config.LeechAction.V = ...,
            leech_threshold : builtins.int = ...,
            disable_autoplay : builtins.bool = ...,
            cap_answer_time_to_secs : builtins.int = ...,
            show_timer : builtins.bool = ...,
            skip_question_when_replaying_answer : builtins.bool = ...,
            bury_new : builtins.bool = ...,
            bury_reviews : builtins.bool = ...,
            other : builtins.bytes = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["bury_new",b"bury_new","bury_reviews",b"bury_reviews","cap_answer_time_to_secs",b"cap_answer_time_to_secs","disable_autoplay",b"disable_autoplay","easy_multiplier",b"easy_multiplier","graduating_interval_easy",b"graduating_interval_easy","graduating_interval_good",b"graduating_interval_good","hard_multiplier",b"hard_multiplier","initial_ease",b"initial_ease","interday_learning_mix",b"interday_learning_mix","interval_multiplier",b"interval_multiplier","lapse_multiplier",b"lapse_multiplier","learn_steps",b"learn_steps","leech_action",b"leech_action","leech_threshold",b"leech_threshold","maximum_review_interval",b"maximum_review_interval","minimum_lapse_interval",b"minimum_lapse_interval","new_card_gather_priority",b"new_card_gather_priority","new_card_insert_order",b"new_card_insert_order","new_card_sort_order",b"new_card_sort_order","new_mix",b"new_mix","new_per_day",b"new_per_day","new_per_day_minimum",b"new_per_day_minimum","other",b"other","relearn_steps",b"relearn_steps","review_order",b"review_order","reviews_per_day",b"reviews_per_day","show_timer",b"show_timer","skip_question_when_replaying_answer",b"skip_question_when_replaying_answer"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MTIME_SECS_FIELD_NUMBER: builtins.int
    USN_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    id: builtins.int = ...
    name: typing.Text = ...
    mtime_secs: builtins.int = ...
    usn: builtins.int = ...
    @property
    def config(self) -> global___DeckConfig.Config: ...
    def __init__(self,
        *,
        id : builtins.int = ...,
        name : typing.Text = ...,
        mtime_secs : builtins.int = ...,
        usn : builtins.int = ...,
        config : typing.Optional[global___DeckConfig.Config] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","id",b"id","mtime_secs",b"mtime_secs","name",b"name","usn",b"usn"]) -> None: ...
global___DeckConfig = DeckConfig

class DeckConfigsForUpdate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ConfigWithExtra(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CONFIG_FIELD_NUMBER: builtins.int
        USE_COUNT_FIELD_NUMBER: builtins.int
        @property
        def config(self) -> global___DeckConfig: ...
        use_count: builtins.int = ...
        def __init__(self,
            *,
            config : typing.Optional[global___DeckConfig] = ...,
            use_count : builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["config",b"config"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["config",b"config","use_count",b"use_count"]) -> None: ...

    class CurrentDeck(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        CONFIG_ID_FIELD_NUMBER: builtins.int
        PARENT_CONFIG_IDS_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        config_id: builtins.int = ...
        @property
        def parent_config_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        def __init__(self,
            *,
            name : typing.Text = ...,
            config_id : builtins.int = ...,
            parent_config_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["config_id",b"config_id","name",b"name","parent_config_ids",b"parent_config_ids"]) -> None: ...

    ALL_CONFIG_FIELD_NUMBER: builtins.int
    CURRENT_DECK_FIELD_NUMBER: builtins.int
    DEFAULTS_FIELD_NUMBER: builtins.int
    SCHEMA_MODIFIED_FIELD_NUMBER: builtins.int
    V3_SCHEDULER_FIELD_NUMBER: builtins.int
    HAVE_ADDONS_FIELD_NUMBER: builtins.int
    CARD_STATE_CUSTOMIZER_FIELD_NUMBER: builtins.int
    @property
    def all_config(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeckConfigsForUpdate.ConfigWithExtra]: ...
    @property
    def current_deck(self) -> global___DeckConfigsForUpdate.CurrentDeck: ...
    @property
    def defaults(self) -> global___DeckConfig: ...
    schema_modified: builtins.bool = ...
    v3_scheduler: builtins.bool = ...
    have_addons: builtins.bool = ...
    card_state_customizer: typing.Text = ...
    """only applies to v3 scheduler"""

    def __init__(self,
        *,
        all_config : typing.Optional[typing.Iterable[global___DeckConfigsForUpdate.ConfigWithExtra]] = ...,
        current_deck : typing.Optional[global___DeckConfigsForUpdate.CurrentDeck] = ...,
        defaults : typing.Optional[global___DeckConfig] = ...,
        schema_modified : builtins.bool = ...,
        v3_scheduler : builtins.bool = ...,
        have_addons : builtins.bool = ...,
        card_state_customizer : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["current_deck",b"current_deck","defaults",b"defaults"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["all_config",b"all_config","card_state_customizer",b"card_state_customizer","current_deck",b"current_deck","defaults",b"defaults","have_addons",b"have_addons","schema_modified",b"schema_modified","v3_scheduler",b"v3_scheduler"]) -> None: ...
global___DeckConfigsForUpdate = DeckConfigsForUpdate

class UpdateDeckConfigsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_DECK_ID_FIELD_NUMBER: builtins.int
    CONFIGS_FIELD_NUMBER: builtins.int
    REMOVED_CONFIG_IDS_FIELD_NUMBER: builtins.int
    APPLY_TO_CHILDREN_FIELD_NUMBER: builtins.int
    CARD_STATE_CUSTOMIZER_FIELD_NUMBER: builtins.int
    target_deck_id: builtins.int = ...
    @property
    def configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeckConfig]:
        """/ Unchanged, non-selected configs can be omitted. Deck will
        / be set to whichever entry comes last.
        """
        pass
    @property
    def removed_config_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    apply_to_children: builtins.bool = ...
    card_state_customizer: typing.Text = ...
    def __init__(self,
        *,
        target_deck_id : builtins.int = ...,
        configs : typing.Optional[typing.Iterable[global___DeckConfig]] = ...,
        removed_config_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        apply_to_children : builtins.bool = ...,
        card_state_customizer : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["apply_to_children",b"apply_to_children","card_state_customizer",b"card_state_customizer","configs",b"configs","removed_config_ids",b"removed_config_ids","target_deck_id",b"target_deck_id"]) -> None: ...
global___UpdateDeckConfigsRequest = UpdateDeckConfigsRequest
