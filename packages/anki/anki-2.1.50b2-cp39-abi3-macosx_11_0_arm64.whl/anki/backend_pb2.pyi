"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ServiceIndex(_ServiceIndex, metaclass=_ServiceIndexEnumTypeWrapper):
    """/ while the protobuf descriptors expose the order services are defined in,
    / that information is not available in prost, so we define an enum to make
    / sure all clients agree on the service index
    """
    pass
class _ServiceIndex:
    V = typing.NewType('V', builtins.int)
class _ServiceIndexEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ServiceIndex.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SERVICE_INDEX_SCHEDULER = ServiceIndex.V(0)
    SERVICE_INDEX_DECKS = ServiceIndex.V(1)
    SERVICE_INDEX_NOTES = ServiceIndex.V(2)
    SERVICE_INDEX_SYNC = ServiceIndex.V(3)
    SERVICE_INDEX_NOTETYPES = ServiceIndex.V(4)
    SERVICE_INDEX_CONFIG = ServiceIndex.V(5)
    SERVICE_INDEX_CARD_RENDERING = ServiceIndex.V(6)
    SERVICE_INDEX_DECK_CONFIG = ServiceIndex.V(7)
    SERVICE_INDEX_TAGS = ServiceIndex.V(8)
    SERVICE_INDEX_SEARCH = ServiceIndex.V(9)
    SERVICE_INDEX_STATS = ServiceIndex.V(10)
    SERVICE_INDEX_MEDIA = ServiceIndex.V(11)
    SERVICE_INDEX_I18N = ServiceIndex.V(12)
    SERVICE_INDEX_COLLECTION = ServiceIndex.V(13)
    SERVICE_INDEX_CARDS = ServiceIndex.V(14)
    SERVICE_INDEX_LINKS = ServiceIndex.V(15)

SERVICE_INDEX_SCHEDULER = ServiceIndex.V(0)
SERVICE_INDEX_DECKS = ServiceIndex.V(1)
SERVICE_INDEX_NOTES = ServiceIndex.V(2)
SERVICE_INDEX_SYNC = ServiceIndex.V(3)
SERVICE_INDEX_NOTETYPES = ServiceIndex.V(4)
SERVICE_INDEX_CONFIG = ServiceIndex.V(5)
SERVICE_INDEX_CARD_RENDERING = ServiceIndex.V(6)
SERVICE_INDEX_DECK_CONFIG = ServiceIndex.V(7)
SERVICE_INDEX_TAGS = ServiceIndex.V(8)
SERVICE_INDEX_SEARCH = ServiceIndex.V(9)
SERVICE_INDEX_STATS = ServiceIndex.V(10)
SERVICE_INDEX_MEDIA = ServiceIndex.V(11)
SERVICE_INDEX_I18N = ServiceIndex.V(12)
SERVICE_INDEX_COLLECTION = ServiceIndex.V(13)
SERVICE_INDEX_CARDS = ServiceIndex.V(14)
SERVICE_INDEX_LINKS = ServiceIndex.V(15)
global___ServiceIndex = ServiceIndex


class BackendInit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PREFERRED_LANGS_FIELD_NUMBER: builtins.int
    LOCALE_FOLDER_PATH_FIELD_NUMBER: builtins.int
    SERVER_FIELD_NUMBER: builtins.int
    @property
    def preferred_langs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    locale_folder_path: typing.Text = ...
    server: builtins.bool = ...
    def __init__(self,
        *,
        preferred_langs : typing.Optional[typing.Iterable[typing.Text]] = ...,
        locale_folder_path : typing.Text = ...,
        server : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["locale_folder_path",b"locale_folder_path","preferred_langs",b"preferred_langs","server",b"server"]) -> None: ...
global___BackendInit = BackendInit

class I18nBackendInit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PREFERRED_LANGS_FIELD_NUMBER: builtins.int
    LOCALE_FOLDER_PATH_FIELD_NUMBER: builtins.int
    @property
    def preferred_langs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    locale_folder_path: typing.Text = ...
    def __init__(self,
        *,
        preferred_langs : typing.Optional[typing.Iterable[typing.Text]] = ...,
        locale_folder_path : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["locale_folder_path",b"locale_folder_path","preferred_langs",b"preferred_langs"]) -> None: ...
global___I18nBackendInit = I18nBackendInit

class BackendError(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Kind(_Kind, metaclass=_KindEnumTypeWrapper):
        pass
    class _Kind:
        V = typing.NewType('V', builtins.int)
    class _KindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Kind.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INVALID_INPUT = BackendError.Kind.V(0)
        UNDO_EMPTY = BackendError.Kind.V(1)
        INTERRUPTED = BackendError.Kind.V(2)
        TEMPLATE_PARSE = BackendError.Kind.V(3)
        IO_ERROR = BackendError.Kind.V(4)
        DB_ERROR = BackendError.Kind.V(5)
        NETWORK_ERROR = BackendError.Kind.V(6)
        SYNC_AUTH_ERROR = BackendError.Kind.V(7)
        SYNC_OTHER_ERROR = BackendError.Kind.V(8)
        JSON_ERROR = BackendError.Kind.V(9)
        PROTO_ERROR = BackendError.Kind.V(10)
        NOT_FOUND_ERROR = BackendError.Kind.V(11)
        EXISTS = BackendError.Kind.V(12)
        FILTERED_DECK_ERROR = BackendError.Kind.V(13)
        SEARCH_ERROR = BackendError.Kind.V(14)

    INVALID_INPUT = BackendError.Kind.V(0)
    UNDO_EMPTY = BackendError.Kind.V(1)
    INTERRUPTED = BackendError.Kind.V(2)
    TEMPLATE_PARSE = BackendError.Kind.V(3)
    IO_ERROR = BackendError.Kind.V(4)
    DB_ERROR = BackendError.Kind.V(5)
    NETWORK_ERROR = BackendError.Kind.V(6)
    SYNC_AUTH_ERROR = BackendError.Kind.V(7)
    SYNC_OTHER_ERROR = BackendError.Kind.V(8)
    JSON_ERROR = BackendError.Kind.V(9)
    PROTO_ERROR = BackendError.Kind.V(10)
    NOT_FOUND_ERROR = BackendError.Kind.V(11)
    EXISTS = BackendError.Kind.V(12)
    FILTERED_DECK_ERROR = BackendError.Kind.V(13)
    SEARCH_ERROR = BackendError.Kind.V(14)

    LOCALIZED_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    localized: typing.Text = ...
    """localized error description suitable for displaying to the user"""

    kind: global___BackendError.Kind.V = ...
    """the error subtype"""

    def __init__(self,
        *,
        localized : typing.Text = ...,
        kind : global___BackendError.Kind.V = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","localized",b"localized"]) -> None: ...
global___BackendError = BackendError
