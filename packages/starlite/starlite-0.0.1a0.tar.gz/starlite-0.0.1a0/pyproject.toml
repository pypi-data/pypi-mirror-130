[tool.poetry]
name = "starlite"
version = "0.0.1a"
description = "Light-weight and flexible ASGI API Framework"
authors = ["Na'aman Hirschfeld <Naaman.Hirschfeld@sprylab.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Goldziher/starlite"
repository = "https://github.com/Goldziher/starlite"
documentation = "https://github.com/Goldziher/starlite"
keywords = ["api", "rest", "http", "asgi", "pydantic", "starlette", "fastapi"]
classifiers = [
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]
include = ["CHANGELOG.md"]
packages = [
    { include = "starlite" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
starlette = "*"
pydantic = "*"
typing-extensions = "*"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-asyncio = "*"
requests = "*"
pydantic-factories = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint.MESSAGE_CONTROL]
disable = ["fixme", "missing-module-docstring", "missing-class-docstring", "line-too-long", "too-few-public-methods", "import-outside-toplevel"]
enable = "useless-suppression"

[tool.pylint.REPORTS]
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"
reports = "no"

[tool.pylint.FORMAT]
max-line-length = "120"

[tool.pylint.DESIGN]
max-args = 10
max-attributes = 10
max-locals = 12
max-returns = 10

[tool.pylint.VARIABLES]
ignored-argument-names = "args|kwargs|_|__"

[tool.pylint.BASIC]
good-names = "_,i,e,mm,yy,T,lt,le,gt,ge,cb"

[tool.mypy]
warn_unused_ignores = true
warn_redundant_casts = true
strict_optional = true
implicit_reexport = false

[tool.coverage.run]
omit = ["*/tests/*"]
