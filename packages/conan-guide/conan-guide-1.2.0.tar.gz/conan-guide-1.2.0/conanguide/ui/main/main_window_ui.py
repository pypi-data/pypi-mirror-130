# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'main_window.ui'
##
## Created by: Qt User Interface Compiler version 5.15.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *

from conanguide.ui.res import resources_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1200, 800)
        MainWindow.setMinimumSize(QSize(800, 800))
        icon = QIcon()
        icon.addFile(u":/general/icon/conan_guide_icon.png", QSize(), QIcon.Normal, QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setDockOptions(QMainWindow.AllowTabbedDocks|QMainWindow.AnimatedDocks)
        self.actionViewProfile = QAction(MainWindow)
        self.actionViewProfile.setObjectName(u"actionViewProfile")
        self.actionViewProfile.setChecked(False)
        icon1 = QIcon()
        icon1.addFile(u":/icon/light/conan_profile.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionViewProfile.setIcon(icon1)
        self.actionFileExit = QAction(MainWindow)
        self.actionFileExit.setObjectName(u"actionFileExit")
        self.actionRefresh = QAction(MainWindow)
        self.actionRefresh.setObjectName(u"actionRefresh")
        icon2 = QIcon()
        icon2.addFile(u":/icon/light/refresh.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRefresh.setIcon(icon2)
        self.actionConanCreate = QAction(MainWindow)
        self.actionConanCreate.setObjectName(u"actionConanCreate")
        icon3 = QIcon()
        icon3.addFile(u":/icon/light/conan_create.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConanCreate.setIcon(icon3)
        self.actionConanInstall = QAction(MainWindow)
        self.actionConanInstall.setObjectName(u"actionConanInstall")
        icon4 = QIcon()
        icon4.addFile(u":/icon/light/conan_install.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConanInstall.setIcon(icon4)
        self.actionConanBuild = QAction(MainWindow)
        self.actionConanBuild.setObjectName(u"actionConanBuild")
        icon5 = QIcon()
        icon5.addFile(u":/icon/light/conan_build.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConanBuild.setIcon(icon5)
        self.actionConanSource = QAction(MainWindow)
        self.actionConanSource.setObjectName(u"actionConanSource")
        icon6 = QIcon()
        icon6.addFile(u":/icon/light/conan_source.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConanSource.setIcon(icon6)
        self.actionConanPackage = QAction(MainWindow)
        self.actionConanPackage.setObjectName(u"actionConanPackage")
        icon7 = QIcon()
        icon7.addFile(u":/icon/light/conan_package.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConanPackage.setIcon(icon7)
        self.actionConanExport = QAction(MainWindow)
        self.actionConanExport.setObjectName(u"actionConanExport")
        icon8 = QIcon()
        icon8.addFile(u":/icon/light/conan_export.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConanExport.setIcon(icon8)
        self.actionConanExportPackage = QAction(MainWindow)
        self.actionConanExportPackage.setObjectName(u"actionConanExportPackage")
        icon9 = QIcon()
        icon9.addFile(u":/icon/light/conan_package_export.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConanExportPackage.setIcon(icon9)
        self.actionViewCache = QAction(MainWindow)
        self.actionViewCache.setObjectName(u"actionViewCache")
        self.actionViewCache.setChecked(False)
        icon10 = QIcon()
        icon10.addFile(u":/icon/light/package.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionViewCache.setIcon(icon10)
        self.actionHelpConanIo = QAction(MainWindow)
        self.actionHelpConanIo.setObjectName(u"actionHelpConanIo")
        icon11 = QIcon()
        icon11.addFile(u":/general/icon/conan_io_icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionHelpConanIo.setIcon(icon11)
        self.actionHelpAbout = QAction(MainWindow)
        self.actionHelpAbout.setObjectName(u"actionHelpAbout")
        self.actionViewWorkspace = QAction(MainWindow)
        self.actionViewWorkspace.setObjectName(u"actionViewWorkspace")
        icon12 = QIcon()
        icon12.addFile(u":/icon/light/workspace.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionViewWorkspace.setIcon(icon12)
        self.actionViewRemote = QAction(MainWindow)
        self.actionViewRemote.setObjectName(u"actionViewRemote")
        icon13 = QIcon()
        icon13.addFile(u":/icon/light/conan_remote.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionViewRemote.setIcon(icon13)
        self.actionViewSettings = QAction(MainWindow)
        self.actionViewSettings.setObjectName(u"actionViewSettings")
        icon14 = QIcon()
        icon14.addFile(u":/icon/light/settings.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionViewSettings.setIcon(icon14)
        self.actionHelpConanDocs = QAction(MainWindow)
        self.actionHelpConanDocs.setObjectName(u"actionHelpConanDocs")
        self.actionHelpConanDocs.setIcon(icon11)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.verticalLayout_12 = QVBoxLayout(self.centralwidget)
        self.verticalLayout_12.setSpacing(2)
        self.verticalLayout_12.setObjectName(u"verticalLayout_12")
        self.verticalLayout_12.setContentsMargins(2, 2, 2, 2)
        self.tabWidgetMain = QTabWidget(self.centralwidget)
        self.tabWidgetMain.setObjectName(u"tabWidgetMain")
        self.tabWidgetMain.setTabPosition(QTabWidget.West)
        self.tabWidgetMain.setTabShape(QTabWidget.Rounded)
        self.tabCache = QWidget()
        self.tabCache.setObjectName(u"tabCache")
        self.layoutTabCache = QHBoxLayout(self.tabCache)
        self.layoutTabCache.setSpacing(0)
        self.layoutTabCache.setObjectName(u"layoutTabCache")
        self.layoutTabCache.setContentsMargins(0, 0, 0, 0)
        icon15 = QIcon()
        icon15.addFile(u":/icon/light/tab_cache.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidgetMain.addTab(self.tabCache, icon15, "")
        self.tabWorkspace = QWidget()
        self.tabWorkspace.setObjectName(u"tabWorkspace")
        self.layoutTabWorkspace = QVBoxLayout(self.tabWorkspace)
        self.layoutTabWorkspace.setSpacing(0)
        self.layoutTabWorkspace.setObjectName(u"layoutTabWorkspace")
        self.layoutTabWorkspace.setContentsMargins(0, 0, 0, 0)
        icon16 = QIcon()
        icon16.addFile(u":/icon/light/tab_workspace.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidgetMain.addTab(self.tabWorkspace, icon16, "")
        self.tabProfile = QWidget()
        self.tabProfile.setObjectName(u"tabProfile")
        self.layoutTabProfile = QHBoxLayout(self.tabProfile)
        self.layoutTabProfile.setSpacing(0)
        self.layoutTabProfile.setObjectName(u"layoutTabProfile")
        self.layoutTabProfile.setContentsMargins(0, 0, 0, 0)
        icon17 = QIcon()
        icon17.addFile(u":/icon/light/tab_conan_profile.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidgetMain.addTab(self.tabProfile, icon17, "")
        self.tabRemote = QWidget()
        self.tabRemote.setObjectName(u"tabRemote")
        self.layoutTabRemote = QVBoxLayout(self.tabRemote)
        self.layoutTabRemote.setSpacing(2)
        self.layoutTabRemote.setObjectName(u"layoutTabRemote")
        self.layoutTabRemote.setContentsMargins(2, 2, 2, 2)
        icon18 = QIcon()
        icon18.addFile(u":/icon/light/tab_conan_remote.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidgetMain.addTab(self.tabRemote, icon18, "")
        self.tabSettings = QWidget()
        self.tabSettings.setObjectName(u"tabSettings")
        icon19 = QIcon()
        icon19.addFile(u":/icon/light/tab_settings.png", QSize(), QIcon.Normal, QIcon.Off)
        self.tabWidgetMain.addTab(self.tabSettings, icon19, "")

        self.verticalLayout_12.addWidget(self.tabWidgetMain)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1200, 21))
        self.menuView = QMenu(self.menubar)
        self.menuView.setObjectName(u"menuView")
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QToolBar(MainWindow)
        self.toolBar.setObjectName(u"toolBar")
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy)
        self.toolBar.setMinimumSize(QSize(0, 0))
        self.toolBar.setBaseSize(QSize(0, 50))
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QSize(30, 30))
        self.toolBar.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)
        self.toolBar.setFloatable(False)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuView.addAction(self.actionViewCache)
        self.menuView.addAction(self.actionViewWorkspace)
        self.menuView.addAction(self.actionViewProfile)
        self.menuView.addAction(self.actionViewRemote)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionViewSettings)
        self.menuFile.addAction(self.actionRefresh)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionFileExit)
        self.menuHelp.addAction(self.actionHelpConanIo)
        self.menuHelp.addAction(self.actionHelpConanDocs)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionHelpAbout)
        self.toolBar.addAction(self.actionRefresh)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionConanCreate)
        self.toolBar.addAction(self.actionConanInstall)
        self.toolBar.addAction(self.actionConanBuild)
        self.toolBar.addAction(self.actionConanSource)
        self.toolBar.addAction(self.actionConanPackage)
        self.toolBar.addAction(self.actionConanExport)
        self.toolBar.addAction(self.actionConanExportPackage)

        self.retranslateUi(MainWindow)
        self.actionFileExit.triggered.connect(MainWindow.close)

        self.tabWidgetMain.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"Conan GUIde", None))
        self.actionViewProfile.setText(QCoreApplication.translate("MainWindow", u"Profile", None))
#if QT_CONFIG(shortcut)
        self.actionViewProfile.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+3", None))
#endif // QT_CONFIG(shortcut)
        self.actionFileExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
#if QT_CONFIG(shortcut)
        self.actionFileExit.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionRefresh.setText(QCoreApplication.translate("MainWindow", u"Refresh All", None))
#if QT_CONFIG(shortcut)
        self.actionRefresh.setShortcut(QCoreApplication.translate("MainWindow", u"Shift+F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionConanCreate.setText(QCoreApplication.translate("MainWindow", u"Create", None))
#if QT_CONFIG(shortcut)
        self.actionConanCreate.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionConanInstall.setText(QCoreApplication.translate("MainWindow", u"Install", None))
#if QT_CONFIG(shortcut)
        self.actionConanInstall.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+I", None))
#endif // QT_CONFIG(shortcut)
        self.actionConanBuild.setText(QCoreApplication.translate("MainWindow", u"Build", None))
#if QT_CONFIG(shortcut)
        self.actionConanBuild.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+B", None))
#endif // QT_CONFIG(shortcut)
        self.actionConanSource.setText(QCoreApplication.translate("MainWindow", u"Source", None))
#if QT_CONFIG(shortcut)
        self.actionConanSource.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+Shift+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionConanPackage.setText(QCoreApplication.translate("MainWindow", u"Package", None))
#if QT_CONFIG(shortcut)
        self.actionConanPackage.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.actionConanExport.setText(QCoreApplication.translate("MainWindow", u"Export", None))
#if QT_CONFIG(shortcut)
        self.actionConanExport.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+Shift+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionConanExportPackage.setText(QCoreApplication.translate("MainWindow", u"Export Package", None))
#if QT_CONFIG(shortcut)
        self.actionConanExportPackage.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewCache.setText(QCoreApplication.translate("MainWindow", u"Cache", None))
#if QT_CONFIG(tooltip)
        self.actionViewCache.setToolTip(QCoreApplication.translate("MainWindow", u"Cache", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionViewCache.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+1", None))
#endif // QT_CONFIG(shortcut)
        self.actionHelpConanIo.setText(QCoreApplication.translate("MainWindow", u"conan.io", None))
#if QT_CONFIG(shortcut)
        self.actionHelpConanIo.setShortcut(QCoreApplication.translate("MainWindow", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.actionHelpAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
#if QT_CONFIG(shortcut)
        self.actionHelpAbout.setShortcut(QCoreApplication.translate("MainWindow", u"F4", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewWorkspace.setText(QCoreApplication.translate("MainWindow", u"Workspace", None))
#if QT_CONFIG(shortcut)
        self.actionViewWorkspace.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+2", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewRemote.setText(QCoreApplication.translate("MainWindow", u"Remote", None))
#if QT_CONFIG(shortcut)
        self.actionViewRemote.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+4", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewSettings.setText(QCoreApplication.translate("MainWindow", u"Settings", None))
#if QT_CONFIG(shortcut)
        self.actionViewSettings.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionHelpConanDocs.setText(QCoreApplication.translate("MainWindow", u"Conan Docs", None))
#if QT_CONFIG(tooltip)
        self.actionHelpConanDocs.setToolTip(QCoreApplication.translate("MainWindow", u"Conan Documentation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionHelpConanDocs.setShortcut(QCoreApplication.translate("MainWindow", u"F3", None))
#endif // QT_CONFIG(shortcut)
        self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabCache), QCoreApplication.translate("MainWindow", u"Cache", None))
        self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabWorkspace), QCoreApplication.translate("MainWindow", u"Workspace", None))
        self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabProfile), QCoreApplication.translate("MainWindow", u"Profile", None))
        self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabRemote), QCoreApplication.translate("MainWindow", u"Remote", None))
        self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabSettings), QCoreApplication.translate("MainWindow", u"Settings", None))
        self.menuView.setTitle(QCoreApplication.translate("MainWindow", u"View", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("MainWindow", u"toolBar", None))
    # retranslateUi

