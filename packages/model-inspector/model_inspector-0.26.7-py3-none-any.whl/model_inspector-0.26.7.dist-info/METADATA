Metadata-Version: 2.1
Name: model-inspector
Version: 0.26.7
Summary: Inspect machine learning models
Home-page: https://github.com/gsganden/model_inspector/tree/main/
Author: Greg Gandenberger
Author-email: gsganden@gmail.com
License: Apache Software License 2.0
Keywords: machine-learning
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: fastcore
Requires-Dist: IPython (>7)
Requires-Dist: matplotlib (>=3.4.2)
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: scikit-learn (>=0.24)
Requires-Dist: scipy
Requires-Dist: seaborn
Requires-Dist: tqdm
Requires-Dist: waterfallcharts
Provides-Extra: dev
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: ipdb ; extra == 'dev'
Requires-Dist: nbdev ; extra == 'dev'
Requires-Dist: nbqa ; extra == 'dev'

# Model Inspector
> Inspect machine learning models


See the [docs](https://gsganden.github.io/model_inspector/), especially for the [inspect module](https://gsganden.github.io/model_inspector/inspect.html), for API details and examples.

The most similar alternative to `model_inspector` that I am aware of is [`yellowbrick`](https://www.scikit-yb.org/en/latest/). Both are machine learning visualization libraries that work well with scikit-learn.

`yellowbrick` is designed around Visualizer objects. Each Visualizer corresponds to a single type of visualization. They have a similar interface to scikit-learn transformers and estimators.

`model_inspector` takes a different approach. It is designed around Inspector objects that bundle together a scikit-learn model, an `X` feature DataFrame, and a `y` target Series. The Inspector object does the work of identifying appropriate visualization types for the specific model and dataset in question and exposing corresponding methods, making it easy to visualize a given model for a given dataset in a variety of ways.

## Install

`pip install model_inspector`


