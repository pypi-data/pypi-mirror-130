[tool.poetry]
name = "qm-qua"
version = "0.3.5-rc1"
description = "QUA language SDK to control a Quantum Computer"
readme = "README.md"
authors = ["Tal Shani <tal@quantum-machines.co>"]

packages = [
    { include = "qm" }
]
include = [
    "CHANGELOG.md",
    "LICENSE",
    "qm/pb/*.py",
    "qm/grpc/*.py",
    "qm/grpc/quantum_simulator/*.py",
]

[tool.poetry.dependencies]
python = "^3.7"
grpcio = "^1.39.0"
protobuf = "^3.7.1"
marshmallow = "^3.0.0"
marshmallow-polyfield = "^5.7"
numpy = "^1.17.0"
betterproto = "^1.2.5"
qua = "^0.1.0"

[tool.poetry.dev-dependencies]
grpcio-tools = "^1.39.0"
black = "^20.8b1"
flake8 = "^3.8.4"
pytest = "^6.2.2"
flake8-bugbear = "^20.11.1"
poethepoet = "^0.10.0"
betterproto = { extras = ["compiler"], version = "^1.2.5" }
Sphinx = "^3.4.3"
sphinx-rtd-theme = "^0.5.1"
sphinxcontrib-redoc = "^1.6.0"
apispec = "^5.1.0"
pytest-order = "^1.0.0"

[tool.black]
target-version = ["py37"]
exclude = "qm/pb/.*"



[tool.poe.tasks]

[tool.poe.tasks.build-docs]
sequence = [
    { script = "shutil:rmtree('dist/docs', ignore_errors=True)" },
    { cmd = "poetry run python ./docs_sphinx/build_config_schema.py" },
    { cmd = "sphinx-build -b html docs_sphinx dist/docs -W --keep-going" }
]
help = "Build project documentation site"

[tool.poe.tasks.clean-grpc]
sequence = [
    { "script" = "shutil:rmtree('qm/grpc', ignore_errors=True)" },
    { "script" = "shutil:rmtree('qm/pb', ignore_errors=True)" }
]
help = "Deletes gRPC generated files"

[tool.poe.tasks.generate-grpc-api]
cmd = '''
poetry run python -m grpc_tools.protoc -Iproto --python_out=. --grpc_python_out=.
qm/pb/compiler.proto
qm/pb/errors.proto
qm/pb/frontend.proto
qm/pb/general_messages.proto
qm/pb/inc_qm_api.proto
qm/pb/inc_qua.proto
qm/pb/inc_qua_config.proto
qm/pb/job_manager.proto
qm/pb/job_results.proto
qm/pb/qm_manager.proto
'''
help = "Generate gRPC python files for communicating with QUA machine"

[tool.poe.tasks.generate-grpc-sim]
cmd = '''
poetry run python -m grpc_tools.protoc -Iproto --python_betterproto_out=.
qm/grpc/quantum_simulator/v1/physical_system.proto
'''
help = "Generate gRPC python files for describing a physical system for the quantum simulator"

[tool.poe.tasks.delete-root-init]
script = "os:remove('__init__.py')"
help = "Remove the root __init__.py file generated by generate-grpc-sim"

[tool.poe.tasks.generate-grpc]
sequence = ["clean-grpc", "generate-grpc-api", "generate-grpc-sim", "delete-root-init"]
help = "Generate gRPC python files"

[tool.poe.tasks.format]
cmd = "black qm"
help = "Format source files according to the style rules"

[tool.poe.tasks.check-links]
cmd = "sphinx-build -b linkcheck docs_sphinx dist/check-links"
help = "Checks that the links are valid"

[tool.poe.tasks.check-format]
cmd = "black qm --check"
help = "Check that all files are formatted according to the style rules"

[tool.poe.tasks.lint]
cmd = "flake8 qm"
help = "Check for lint errors"

[tool.poe.tasks.test]
cmd = "pytest tests"
help = "Run all unit tests"

[tool.poe.tasks.check]
sequence = ["check-format", "check-links", "lint", "test"]
help = "Perform all check possible on the code"

[tool.poe.tasks.check-grpc-breaking-changes]
cmd = "buf breaking --against '.git#branch=main'"
help = "Check if the API broke against the main branch"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
