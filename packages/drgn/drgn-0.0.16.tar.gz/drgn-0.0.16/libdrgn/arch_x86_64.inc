/* Generated by libdrgn/build-aux/gen_arch.awk. */

#include "arch_register_layout.h" // IWYU pragma: export

static const struct drgn_register registers[] = {
	{
		.names = (const char * const []){
			"rax",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rax),
	},
	{
		.names = (const char * const []){
			"rdx",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rdx),
	},
	{
		.names = (const char * const []){
			"rcx",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rcx),
	},
	{
		.names = (const char * const []){
			"rbx",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rbx),
	},
	{
		.names = (const char * const []){
			"rsi",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rsi),
	},
	{
		.names = (const char * const []){
			"rdi",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rdi),
	},
	{
		.names = (const char * const []){
			"rbp",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rbp),
	},
	{
		.names = (const char * const []){
			"rsp",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rsp),
	},
	{
		.names = (const char * const []){
			"r8",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r8),
	},
	{
		.names = (const char * const []){
			"r9",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r9),
	},
	{
		.names = (const char * const []){
			"r10",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r10),
	},
	{
		.names = (const char * const []){
			"r11",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r11),
	},
	{
		.names = (const char * const []){
			"r12",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r12),
	},
	{
		.names = (const char * const []){
			"r13",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r13),
	},
	{
		.names = (const char * const []){
			"r14",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r14),
	},
	{
		.names = (const char * const []){
			"r15",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(r15),
	},
	{
		.names = (const char * const []){
			"rip",
		},
		.num_names = 1,
		.regno = DRGN_REGISTER_NUMBER(rip),
	},
};

static const struct drgn_register *register_by_name(const char *p)
{
	switch (*(p++)) {
	case 'r':
		switch (*(p++)) {
		case '1':
			switch (*(p++)) {
			case '0':
				switch (*(p++)) {
				case '\0':
					return &registers[10];
				default:
					return NULL;
				}
			case '1':
				switch (*(p++)) {
				case '\0':
					return &registers[11];
				default:
					return NULL;
				}
			case '2':
				switch (*(p++)) {
				case '\0':
					return &registers[12];
				default:
					return NULL;
				}
			case '3':
				switch (*(p++)) {
				case '\0':
					return &registers[13];
				default:
					return NULL;
				}
			case '4':
				switch (*(p++)) {
				case '\0':
					return &registers[14];
				default:
					return NULL;
				}
			case '5':
				switch (*(p++)) {
				case '\0':
					return &registers[15];
				default:
					return NULL;
				}
			default:
				return NULL;
			}
		case '8':
			switch (*(p++)) {
			case '\0':
				return &registers[8];
			default:
				return NULL;
			}
		case '9':
			switch (*(p++)) {
			case '\0':
				return &registers[9];
			default:
				return NULL;
			}
		case 'a':
			switch (*(p++)) {
			case 'x':
				switch (*(p++)) {
				case '\0':
					return &registers[0];
				default:
					return NULL;
				}
			default:
				return NULL;
			}
		case 'b':
			switch (*(p++)) {
			case 'p':
				switch (*(p++)) {
				case '\0':
					return &registers[6];
				default:
					return NULL;
				}
			case 'x':
				switch (*(p++)) {
				case '\0':
					return &registers[3];
				default:
					return NULL;
				}
			default:
				return NULL;
			}
		case 'c':
			switch (*(p++)) {
			case 'x':
				switch (*(p++)) {
				case '\0':
					return &registers[2];
				default:
					return NULL;
				}
			default:
				return NULL;
			}
		case 'd':
			switch (*(p++)) {
			case 'i':
				switch (*(p++)) {
				case '\0':
					return &registers[5];
				default:
					return NULL;
				}
			case 'x':
				switch (*(p++)) {
				case '\0':
					return &registers[1];
				default:
					return NULL;
				}
			default:
				return NULL;
			}
		case 'i':
			switch (*(p++)) {
			case 'p':
				switch (*(p++)) {
				case '\0':
					return &registers[16];
				default:
					return NULL;
				}
			default:
				return NULL;
			}
		case 's':
			switch (*(p++)) {
			case 'i':
				switch (*(p++)) {
				case '\0':
					return &registers[4];
				default:
					return NULL;
				}
			case 'p':
				switch (*(p++)) {
				case '\0':
					return &registers[7];
				default:
					return NULL;
				}
			default:
				return NULL;
			}
		default:
			return NULL;
		}
	default:
		return NULL;
	}
}

#define DRGN_ARCHITECTURE_REGISTERS \
	.register_layout = register_layout, \
	.dwarf_regno_to_internal = dwarf_regno_to_internal, \
	.registers = registers, \
	.num_registers = 17, \
	.register_by_name = register_by_name
