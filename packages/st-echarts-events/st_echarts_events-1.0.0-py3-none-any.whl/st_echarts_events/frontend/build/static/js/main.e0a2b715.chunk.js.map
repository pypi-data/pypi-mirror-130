{"version":3,"sources":["StreamlitEchartsEvents.tsx","index.tsx"],"names":["StreamlitEchartsEvents","render","options","JSON","parse","props","args","events_dict","params_dict","event_values","PARAM_KEYS","Object","keys","handle_event","params","p","indexOf","data","stringify","Streamlit","setComponentValue","event","option","notMerge","lazyUpdate","onEvents","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"0PAYMA,E,4MAGGC,OAAS,WAGZ,IAAMC,EAASC,KAAKC,MAAM,EAAKC,MAAMC,KAAX,SACpBC,EAAYJ,KAAKC,MAAM,EAAKC,MAAMC,KAAX,QACvBE,EAAYL,KAAKC,MAAM,EAAKC,MAAMC,KAAX,MAKvBG,EAAiB,GACjBC,EAAWC,OAAOC,KAAKJ,GAG7B,SAASK,EAAaC,GACpB,IAAK,IAAIC,KAAKD,GACmB,IAAzBJ,EAAWM,QAAQD,KACrBN,EAAaM,GAAGD,EAAOC,IAM7B,IAAIE,EAAKd,KAAKe,UAAUT,GAExBU,IAAUC,kBAAkBH,GAI9B,IAAM,IAAII,KAAUd,EAClBA,EAAYc,GAAOR,EAGrB,OACI,kBAAC,IAAD,CACES,OAAQpB,EACRqB,UAAU,EACVC,YAAY,EACZC,SAAWlB,K,YAzCcmB,KAmDtBC,cAAwB3B,GC3DvC4B,IAAS3B,OACP,kBAAC,IAAM4B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e0a2b715.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport ReactEcharts from \"echarts-for-react\"\n\n\ninterface EVENT_DATA{\n  event_data:Map<string,object>;\n}\nclass StreamlitEchartsEvents extends StreamlitComponentBase<EVENT_DATA> {\n  \n\n  public render = (): ReactNode => {\n      // Arguments that are passed to the plugin in Python are accessible\n      // via `this.props.args`.\n      const options =JSON.parse(this.props.args[\"options\"])\n      const events_dict=JSON.parse(this.props.args[\"events\"])\n      const params_dict=JSON.parse(this.props.args[\"keys\"])\n\n\n      //event_values store events data ,which in echarts, params.*, \n      //filtered by 'keys' \n      const event_values:any={}\n      const PARAM_KEYS=Object.keys(params_dict)  \n      \n      //event_handler. in event, we stored property of user-designed params .\n      function handle_event(params:any){     \n        for (var p in params){          \n            if (PARAM_KEYS.indexOf(p)!==-1){\n              event_values[p]=params[p]\n            }\n                \n        }       \n\n      //converting object to json\n        let data=JSON.stringify(event_values)    \n      //return value to python side    \n        Streamlit.setComponentValue(data)\n      }\n   \n      //return event_handler to event\n      for ( let event  in events_dict){\n        events_dict[event]=handle_event           \n      }\n\n      return (\n          <ReactEcharts\n            option={options}\n            notMerge={true}\n            lazyUpdate={true}            \n            onEvents= {events_dict}\n          />\n        \n      )\n  }\n\n \n}\n\n\nexport default withStreamlitConnection(StreamlitEchartsEvents)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitEchartsEvents from \"./StreamlitEchartsEvents\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitEchartsEvents/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}