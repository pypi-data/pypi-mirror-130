[tool.poetry]
authors = ["gandalfmu <muyanru345@163.com>", "timmyliang <820472580@qq.com>"]
description = "UI components library for PySide"
license = "MIT"
name = "dayu_widgets"
repository = "https://github.com/phenom-films/dayu_widgets"
version = "0.2.0"

[tool.poetry.dependencies]
PySide2 = "^5.15.2"
"Qt.py" = "^1.3.6"
dayu-path = "^0.5.2"
python = "^2.7 || >=3.7,<3.10"
singledispatch = "^3.7.0"
six = "^1.16.0"

[tool.poetry.dev-dependencies]
pytest = {version = "^6.2.5", python = "^3.7"}

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
update_changelog_on_bump = true
version = "0.2.0"
version_files = [
  "pyproject.toml:version",
  "dayu_widgets/__version__.py",
]

[tool.black]
exclude = '''
(
  /(
      /.eggs         # exclude a few common directories in the
    | /.git          # root of the project
    | /.hg
    | /.mypy_cache
    | /.tox
    | /.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
include = '/.pyi?$'
line-length = 88
target_version = ['py37']

[tool.isort]

add_imports = [
  "from __future__ import absolute_import",
  "from __future__ import division",
  "from __future__ import print_function",
]
atomic = true
filter_files = true
float_to_top = false
include_trailing_comma = true
known_first_party = "src"
lines_after_imports = 2
lines_between_types = 1
profile = "black"
src_paths = ["dayu_widgets", "tests"]
use_parentheses = true
# Enforce import section headers.
force_single_line = true
force_sort_within_sections = true
import_heading_firstparty = "Import local modules"
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
# All project unrelated unknown imports belong to third-party.
default_section = "THIRDPARTY"
skip_glob = "*/docs/conf.py"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = python3.7
isolated_build = True
skipsdist = true

[testenv:test]
deps =
    -rrequirements.txt
    pytest
setenv =
    PYTHONPATH = {toxinidir}
commands = pytest

[testenv:deploy]
deps = poetry
commands = python scripts/deploy.py
"""

[tool.flake8]
max-line-length = 88

[tool.pycln]
all = true

# [tool.pylint.messages_control]
# disable= "all"
# enable= "E0611"
