<?xml version="1.0" encoding="utf-8" ?>

<list>
  <item type="dictionary">
    <dictionary>
      <item key="data"><![CDATA[## Script (Python) "manage_renewUids"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=
##title=Do you really want to renew UIDs?
##
request = context.REQUEST
p = []
p.append("Renew UIDs:")
tstr = context.operator_gettype('')
tbytes = context.operator_gettype(b'')

d = {}
def renew(node):
    old_uid = node.get_uid(False)
    new_uid = node.get_uid(True)
    d[old_uid] = new_uid
    for childNode in node.getChildNodes():
        renew(childNode)

c = []
def resync(node):
    if node.meta_id!='ZMSLinkElement' and node.getType()=='ZMSRecordSet':
        objAttrs = node.getMetaobjAttrs(node.meta_id)
        key = [x for x in objAttrs if x['type']=='list'][0]['id']
        for obj_vers in node.getObjVersions():
            l = context.operator_getattr(obj_vers,key,[])
            for r in l:
              for objAttr in objAttrs:
                  v = r.get(objAttr['id'],None)
                  if v is not None and context.operator_gettype(v) in [tbytes,tstr]:
                    o = v
                    for k in d:
                        v = v.replace(k,d[k])
                    if o != v:
                        r[objAttr['id']] = v
                        c.append(1)
            context.operator_setattr(obj_vers,key,l)
    else:
        for objAttrId in node.getObjAttrs().keys():
            objAttr = node.getObjAttr(objAttrId)
            datatype = objAttr['datatype']
            lang_suffixes = ['']
            if objAttr['multilang']:
                lang_suffixes = ['_%s'%x for x in node.getLangIds()]
            for lang_suffix in lang_suffixes:
                key = '%s%s'%(objAttr['id'],lang_suffix)
                for obj_vers in node.getObjVersions():
                    v = context.operator_getattr(obj_vers,key,None)
                    if v is not None and context.operator_gettype(v) in [tbytes,tstr]:
                        o = v
                        for k in d:
                            v = v.replace(k,d[k])
                        if o != v:
                            context.operator_setattr(obj_vers,key,v)
                            c.append(1)
    for childNode in node.getChildNodes():
        resync(childNode)

renew(context)
p.append("%i renewed"%len(d))

request.set('url','{$}')
context.ZMSIndexZCatalog_func_(context,'reindex')
p.append("reindexed ZMSIndexZCatalog")

resync(context)
p.append("%i resynced"%len(c))

return "\n".join(p)
]]>
      </item>
      <item key="description"><![CDATA[Do you really want to renew UIDs?]]></item>
      <item key="execution" type="int">1</item>
      <item key="icon_clazz"><![CDATA[fas fa-sync text-danger]]></item>
      <item key="id">manage_renewUids</item>
      <item key="meta_type"><![CDATA[Script (Python)]]></item>
      <item key="meta_types" type="list">
        <list>
          <item>ZMS</item>
        </list>
      </item>
      <item key="name"><![CDATA[Renew UIDs...]]></item>
      <item key="revision">0.0.0</item>
      <item key="roles" type="list">
        <list>
          <item>ZMSAdministrator</item>
        </list>
      </item>
      <item key="title"><![CDATA[Renew UIDs...]]></item>
    </dictionary>
  </item>
</list>